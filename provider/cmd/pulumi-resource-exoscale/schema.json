{
    "name": "exoscale",
    "displayName": "Exoscale",
    "description": "A Pulumi package for creating and managing exoscale cloud resources.",
    "keywords": [
        "pulumi",
        "exoscale",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`exoscale` Terraform Provider](https://github.com/exoscale/terraform-provider-exoscale).",
    "repository": "https://github.com/pulumiverse/pulumi-exoscale",
    "logoUrl": "https://avatars3.githubusercontent.com/exoscale",
    "pluginDownloadURL": "github://api.github.com/pulumiverse/pulumi-exoscale",
    "publisher": "Pulumiverse",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "rootNamespace": "Pulumiverse"
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumiverse/pulumi-exoscale/sdk/go/exoscale"
        },
        "java": {
            "basePackage": "com.pulumiverse"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing exoscale cloud resources.",
            "packageName": "@pulumiverse/exoscale",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/exoscale/terraform-provider-exoscale)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-exoscale` repo](https://github.com/pulumiverse/pulumi-exoscale/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-exoscale` repo](https://github.com/exoscale/terraform-provider-exoscale/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "packageName": "pulumiverse_exoscale",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/exoscale/terraform-provider-exoscale)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-exoscale` repo](https://github.com/pulumiverse/pulumi-exoscale/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-exoscale` repo](https://github.com/exoscale/terraform-provider-exoscale/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "computeEndpoint": {
                "type": "string",
                "description": "Exoscale CloudStack API endpoint (by default: https://api.exoscale.com/v1)\n"
            },
            "config": {
                "type": "string",
                "description": "CloudStack ini configuration filename (by default: cloudstack.ini)\n",
                "language": {
                    "csharp": {
                        "name": "CloudStackIniConfig"
                    }
                }
            },
            "delay": {
                "type": "integer",
                "deprecationMessage": "Does nothing"
            },
            "dnsEndpoint": {
                "type": "string",
                "description": "Exoscale DNS API endpoint (by default: https://api.exoscale.com/dns)\n"
            },
            "environment": {
                "type": "string"
            },
            "gzipUserData": {
                "type": "boolean",
                "description": "Defines if the user-data of compute instances should be gzipped (by default: true)\n"
            },
            "key": {
                "type": "string",
                "description": "Exoscale API key\n"
            },
            "profile": {
                "type": "string",
                "deprecationMessage": "Use region instead"
            },
            "region": {
                "type": "string",
                "description": "CloudStack ini configuration section name (by default: cloudstack)\n"
            },
            "secret": {
                "type": "string",
                "description": "Exoscale API secret\n",
                "secret": true
            },
            "timeout": {
                "type": "integer",
                "description": "Timeout in seconds for waiting on compute resources to become available (by default: 300)\n"
            },
            "token": {
                "type": "string",
                "deprecationMessage": "Use key instead"
            }
        },
        "defaults": [
            "dnsEndpoint",
            "timeout"
        ]
    },
    "types": {
        "exoscale:index/ComputeInstanceNetworkInterface:ComputeInstanceNetworkInterface": {
            "properties": {
                "ipAddress": {
                    "type": "string",
                    "description": "The IPv4 address to request as static DHCP lease if the network interface is attached to a *managed* private network.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkId": {
                    "type": "string",
                    "description": "The exoscale.PrivateNetwork (ID) to attach to the instance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "networkId"
            ]
        },
        "exoscale:index/DatabaseKafka:DatabaseKafka": {
            "properties": {
                "enableCertAuth": {
                    "type": "boolean",
                    "description": "Enable certificate-based authentication method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableKafkaConnect": {
                    "type": "boolean",
                    "description": "Enable Kafka Connect.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableKafkaRest": {
                    "type": "boolean",
                    "description": "Enable Kafka REST.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableSaslAuth": {
                    "type": "boolean",
                    "description": "Enable SASL-based authentication method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableSchemaRegistry": {
                    "type": "boolean",
                    "description": "Enable Schema Registry.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of CIDR blocks to allow incoming connections from.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaConnectSettings": {
                    "type": "string",
                    "description": "Kafka Connect configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka-connect` for reference).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaRestSettings": {
                    "type": "string",
                    "description": "Kafka REST configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka-rest` for reference).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kafkaSettings": {
                    "type": "string",
                    "description": "Kafka configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka` for reference).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemaRegistrySettings": {
                    "type": "string",
                    "description": "Schema Registry configuration settings in JSON format (`exo dbaas type show kafka --settings=schema-registry` for reference)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "description": "PostgreSQL major version (`exo dbaas type show pg` for reference; may only be set at creation time).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enableCertAuth",
                        "enableSaslAuth",
                        "ipFilters",
                        "kafkaConnectSettings",
                        "kafkaRestSettings",
                        "kafkaSettings",
                        "schemaRegistrySettings",
                        "version"
                    ]
                }
            }
        },
        "exoscale:index/DatabaseMysql:DatabaseMysql": {
            "properties": {
                "adminPassword": {
                    "type": "string",
                    "description": "A custom administrator account password (may only be set at creation time).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "secret": true
                },
                "adminUsername": {
                    "type": "string",
                    "description": "A custom administrator account username (may only be set at creation time).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupSchedule": {
                    "type": "string",
                    "description": "The automated backup schedule (`HH:MM`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of CIDR blocks to allow incoming connections from.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mysqlSettings": {
                    "type": "string",
                    "description": "MySQL configuration settings in JSON format (`exo dbaas type show mysql --settings=mysql` for reference).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "description": "PostgreSQL major version (`exo dbaas type show pg` for reference; may only be set at creation time).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "adminPassword",
                        "adminUsername",
                        "backupSchedule",
                        "ipFilters",
                        "mysqlSettings",
                        "version"
                    ]
                }
            }
        },
        "exoscale:index/DatabaseOpensearch:DatabaseOpensearch": {
            "properties": {
                "dashboards": {
                    "$ref": "#/types/exoscale:index/DatabaseOpensearchDashboards:DatabaseOpensearchDashboards",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forkFromService": {
                    "type": "string",
                    "description": "Service name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "indexPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/exoscale:index/DatabaseOpensearchIndexPattern:DatabaseOpensearchIndexPattern"
                    },
                    "description": "Allows you to create glob style patterns and set a max number of indexes matching this pattern you want to keep. Creating indexes exceeding this value will cause the oldest one to get deleted. You could for example create a pattern looking like 'logs.?' and then create index logs.1, logs.2 etc, it will delete logs.1 once you create logs.6. Do note 'logs.?' does not apply to logs.10. Note: Setting max_index_count to 0 will do nothing and the pattern gets ignored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexTemplate": {
                    "$ref": "#/types/exoscale:index/DatabaseOpensearchIndexTemplate:DatabaseOpensearchIndexTemplate",
                    "description": "Template settings for all new indexes\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of CIDR blocks to allow incoming connections from.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keepIndexRefreshInterval": {
                    "type": "boolean",
                    "description": "Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIndexCount": {
                    "type": "integer",
                    "description": "Maximum number of indexes to keep before deleting the oldest one (Minimum value is `0`)\n* `dashboards`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recoveryBackupName": {
                    "type": "string",
                    "description": "-\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "settings": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "description": "PostgreSQL major version (`exo dbaas type show pg` for reference; may only be set at creation time).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "version"
                    ]
                }
            }
        },
        "exoscale:index/DatabaseOpensearchDashboards:DatabaseOpensearchDashboards": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "{Type -  schema.TypeBool, Optional -  true, Default -  true},\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxOldSpaceSize": {
                    "type": "integer",
                    "description": "{Type -  schema.TypeInt, Optional -  true, Default -  128},\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestTimeout": {
                    "type": "integer",
                    "description": "{Type -  schema.TypeInt, Optional -  true, Default -  30000},\n`settings` -  OpenSearch-specific settings, in json. e.g.`jsonencode({thread_pool_search_size: 64})`. Use `exo x get-dbaas-settings-opensearch` to get a list of available settings.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "exoscale:index/DatabaseOpensearchIndexPattern:DatabaseOpensearchIndexPattern": {
            "properties": {
                "maxIndexCount": {
                    "type": "integer",
                    "description": "Maximum number of indexes to keep before deleting the oldest one (Minimum value is `0`)\n* `dashboards`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "description": "fnmatch pattern\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortingAlgorithm": {
                    "type": "string",
                    "description": "`alphabetical` or `creation_date`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "exoscale:index/DatabaseOpensearchIndexTemplate:DatabaseOpensearchIndexTemplate": {
            "properties": {
                "mappingNestedObjectsLimit": {
                    "type": "integer",
                    "description": "The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. (Default is 10000. Minimum value is `0`, maximum value is `100000`.)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfReplicas": {
                    "type": "integer",
                    "description": "The number of replicas each primary shard has. (Minimum value is `0`, maximum value is `29`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numberOfShards": {
                    "type": "integer",
                    "description": "The number of primary shards that an index should have. (Minimum value is `1`, maximum value is `1024`.)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "exoscale:index/DatabasePg:DatabasePg": {
            "properties": {
                "adminPassword": {
                    "type": "string",
                    "description": "A custom administrator account password (may only be set at creation time).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "secret": true
                },
                "adminUsername": {
                    "type": "string",
                    "description": "A custom administrator account username (may only be set at creation time).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupSchedule": {
                    "type": "string",
                    "description": "The automated backup schedule (`HH:MM`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of CIDR blocks to allow incoming connections from.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgSettings": {
                    "type": "string",
                    "description": "PostgreSQL configuration settings in JSON format (`exo dbaas type show pg --settings=pg` for reference).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pgbouncerSettings": {
                    "type": "string",
                    "description": "PgBouncer configuration settings in JSON format (`exo dbaas type show pg --settings=pgbouncer` for reference).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pglookoutSettings": {
                    "type": "string",
                    "description": "pglookout configuration settings in JSON format (`exo dbaas type show pg --settings=pglookout` for reference).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "description": "PostgreSQL major version (`exo dbaas type show pg` for reference; may only be set at creation time).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "adminPassword",
                        "adminUsername",
                        "backupSchedule",
                        "ipFilters",
                        "pgSettings",
                        "pgbouncerSettings",
                        "pglookoutSettings",
                        "version"
                    ]
                }
            }
        },
        "exoscale:index/DatabaseRedis:DatabaseRedis": {
            "properties": {
                "ipFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of CIDR blocks to allow incoming connections from.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redisSettings": {
                    "type": "string",
                    "description": "Redis configuration settings in JSON format (`exo dbaas type show redis --settings=redis` for reference).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ipFilters",
                        "redisSettings"
                    ]
                }
            }
        },
        "exoscale:index/ElasticIPHealthcheck:ElasticIPHealthcheck": {
            "properties": {
                "interval": {
                    "type": "integer",
                    "description": "The healthcheck interval (seconds; must be between `5` and `300`; default: `10`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mode": {
                    "type": "string",
                    "description": "The healthcheck mode (`tcp`, `http` or `https`; may only be set at creation time).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The healthcheck target port (must be between `1` and `65535`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strikesFail": {
                    "type": "integer",
                    "description": "The number of failed healthcheck attempts before considering the target unhealthy (must be between `1` and `20`; default: `2`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strikesOk": {
                    "type": "integer",
                    "description": "The number of successful healthcheck attempts before considering the target healthy (must be between `1` and `20`; default: `3`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "description": "The time before considering a healthcheck probing failed (seconds; must be between `2` and `60`; default: `3`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsSkipVerify": {
                    "type": "boolean",
                    "description": "Disable TLS certificate verification for healthcheck in `https` mode (boolean; default: `false`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsSni": {
                    "type": "string",
                    "description": "The healthcheck server name to present with SNI in `https` mode.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "type": "string",
                    "description": "The healthcheck target URI (required in `http(s)` modes).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "mode",
                "port"
            ]
        },
        "exoscale:index/InstancePoolInstance:InstancePoolInstance": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The compute instance ID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv6Address": {
                    "type": "string",
                    "description": "The instance (main network interface) IPv6 address.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The instance pool name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicIpAddress": {
                    "type": "string",
                    "description": "The instance (main network interface) IPv4 address.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ipv6Address",
                        "publicIpAddress"
                    ]
                }
            }
        },
        "exoscale:index/NLBServiceHealthcheck:NLBServiceHealthcheck": {
            "properties": {
                "interval": {
                    "type": "integer",
                    "description": "The healthcheck interval in seconds (default: `10`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mode": {
                    "type": "string",
                    "description": "The healthcheck mode (`tcp`|`http`|`https`; default: `tcp`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The healthcheck port.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retries": {
                    "type": "integer",
                    "description": "The healthcheck retries (default: `1`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "description": "The healthcheck timeout (seconds; default: `5`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsSni": {
                    "type": "string",
                    "description": "The healthcheck TLS SNI server name (only if `mode` is `https`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "type": "string",
                    "description": "The healthcheck URI (must be set only if `mode` is `http(s)`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "port"
            ]
        },
        "exoscale:index/SKSClusterOidc:SKSClusterOidc": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The OpenID client ID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupsClaim": {
                    "type": "string",
                    "description": "An OpenID JWT claim to use as the user's group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupsPrefix": {
                    "type": "string",
                    "description": "An OpenID prefix prepended to group claims.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "issuerUrl": {
                    "type": "string",
                    "description": "The OpenID provider URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requiredClaim": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of key/value pairs that describes a required claim in the OpenID Token.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usernameClaim": {
                    "type": "string",
                    "description": "An OpenID JWT claim to use as the user name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usernamePrefix": {
                    "type": "string",
                    "description": "An OpenID prefix prepended to username claims.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "issuerUrl"
            ]
        },
        "exoscale:index/SecurityGroupRulesEgress:SecurityGroupRulesEgress": {
            "properties": {
                "cidrLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of (`INGRESS`) source / (`EGRESS`) destination IP subnet (in CIDR notation) to match.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the block.\n* `icmp_type`/`icmp_code` - An ICMP/ICMPv6 type/code to match.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "icmpCode": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "icmpType": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of ports or port ranges (`\u003cstart_port\u003e-\u003cend_port\u003e`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "description": "The network protocol to match (`TCP`, `UDP`, `ICMP`, `ICMPv6`, `AH`, `ESP`, `GRE`, `IPIP` or `ALL`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userSecurityGroupLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of source (for ingress)/destination (for egress) identified by a security group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ids"
                    ]
                }
            }
        },
        "exoscale:index/SecurityGroupRulesIngress:SecurityGroupRulesIngress": {
            "properties": {
                "cidrLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of (`INGRESS`) source / (`EGRESS`) destination IP subnet (in CIDR notation) to match.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the block.\n* `icmp_type`/`icmp_code` - An ICMP/ICMPv6 type/code to match.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "icmpCode": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "icmpType": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of ports or port ranges (`\u003cstart_port\u003e-\u003cend_port\u003e`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "description": "The network protocol to match (`TCP`, `UDP`, `ICMP`, `ICMPv6`, `AH`, `ESP`, `GRE`, `IPIP` or `ALL`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userSecurityGroupLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of source (for ingress)/destination (for egress) identified by a security group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ids"
                    ]
                }
            }
        },
        "exoscale:index/getComputeInstanceListInstance:getComputeInstanceListInstance": {
            "properties": {
                "antiAffinityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "createdAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployTargetId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "diskSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticIpIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv6": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv6Address": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "managerId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "managerType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateNetworkIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicIpAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sshKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "state": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "templateId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userData": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale [Zone][zone] name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "deployTargetId",
                "diskSize",
                "elasticIpIds",
                "ipv6",
                "ipv6Address",
                "managerId",
                "managerType",
                "privateNetworkIds",
                "publicIpAddress",
                "securityGroupIds",
                "sshKey",
                "state",
                "templateId",
                "type",
                "userData",
                "zone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "exoscale:index/getDomainRecordFilter:getDomainRecordFilter": {
            "properties": {
                "contentRegex": {
                    "type": "string",
                    "description": "A regular expression to match the record content.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The record ID to match.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The domain record name to match.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recordType": {
                    "type": "string",
                    "description": "The record type to match.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "exoscale:index/getDomainRecordRecord:getDomainRecordRecord": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "The domain record content.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "The exoscale.Domain name to match.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The record ID to match.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The domain record name to match.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prio": {
                    "type": "integer",
                    "description": "The record priority.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recordType": {
                    "type": "string",
                    "description": "The record type to match.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ttl": {
                    "type": "integer",
                    "description": "The record TTL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "exoscale:index/getElasticIPHealthcheck:getElasticIPHealthcheck": {
            "properties": {
                "interval": {
                    "type": "integer",
                    "description": "The healthcheck interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mode": {
                    "type": "string",
                    "description": "The healthcheck mode.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The healthcheck target port.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strikesFail": {
                    "type": "integer",
                    "description": "The number of failed healthcheck attempts before considering the target unhealthy.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strikesOk": {
                    "type": "integer",
                    "description": "The number of successful healthcheck attempts before considering the target healthy.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "description": "The time in seconds before considering a healthcheck probing failed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsSkipVerify": {
                    "type": "boolean",
                    "description": "Disable TLS certificate verification for healthcheck in `https` mode.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsSni": {
                    "type": "string",
                    "description": "The healthcheck server name to present with SNI in `https` mode.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "type": "string",
                    "description": "The healthcheck URI.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "interval",
                "mode",
                "port",
                "strikesFail",
                "strikesOk",
                "timeout",
                "tlsSkipVerify",
                "tlsSni",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "exoscale:index/getInstancePoolInstance:getInstancePoolInstance": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The instance pool ID to match (conflicts with `name`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv6Address": {
                    "type": "string",
                    "description": "The instance (main network interface) IPv6 address.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The pool name to match (conflicts with `id`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicIpAddress": {
                    "type": "string",
                    "description": "The instance (main network interface) IPv4 address.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ipv6Address",
                "publicIpAddress"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "exoscale:index/getInstancePoolListPool:getInstancePoolListPool": {
            "properties": {
                "affinityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployTargetId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "diskSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticIpIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instancePrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanceType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/exoscale:index/getInstancePoolListPoolInstance:getInstancePoolListPoolInstance"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv6": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keyPair": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "state": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "templateId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userData": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale [Zone][zone] name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "affinityGroupIds",
                "deployTargetId",
                "description",
                "diskSize",
                "elasticIpIds",
                "instancePrefix",
                "instanceType",
                "instances",
                "ipv6",
                "keyPair",
                "networkIds",
                "securityGroupIds",
                "size",
                "state",
                "templateId",
                "userData",
                "zone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "exoscale:index/getInstancePoolListPoolInstance:getInstancePoolListPoolInstance": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv6Address": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicIpAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ipv6Address",
                "publicIpAddress"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the exoscale package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "computeEndpoint": {
                "type": "string",
                "description": "Exoscale CloudStack API endpoint (by default: https://api.exoscale.com/v1)\n"
            },
            "config": {
                "type": "string",
                "description": "CloudStack ini configuration filename (by default: cloudstack.ini)\n",
                "language": {
                    "csharp": {
                        "name": "CloudStackIniConfig"
                    }
                }
            },
            "delay": {
                "type": "integer",
                "deprecationMessage": "Does nothing"
            },
            "dnsEndpoint": {
                "type": "string",
                "description": "Exoscale DNS API endpoint (by default: https://api.exoscale.com/dns)\n"
            },
            "environment": {
                "type": "string"
            },
            "gzipUserData": {
                "type": "boolean",
                "description": "Defines if the user-data of compute instances should be gzipped (by default: true)\n"
            },
            "key": {
                "type": "string",
                "description": "Exoscale API key\n"
            },
            "profile": {
                "type": "string",
                "deprecationMessage": "Use region instead"
            },
            "region": {
                "type": "string",
                "description": "CloudStack ini configuration section name (by default: cloudstack)\n"
            },
            "secret": {
                "type": "string",
                "description": "Exoscale API secret\n",
                "secret": true
            },
            "timeout": {
                "type": "integer",
                "description": "Timeout in seconds for waiting on compute resources to become available (by default: 300)\n"
            },
            "token": {
                "type": "string",
                "deprecationMessage": "Use key instead"
            }
        },
        "required": [
            "dnsEndpoint",
            "timeout"
        ],
        "inputProperties": {
            "computeEndpoint": {
                "type": "string",
                "description": "Exoscale CloudStack API endpoint (by default: https://api.exoscale.com/v1)\n"
            },
            "config": {
                "type": "string",
                "description": "CloudStack ini configuration filename (by default: cloudstack.ini)\n",
                "language": {
                    "csharp": {
                        "name": "CloudStackIniConfig"
                    }
                }
            },
            "delay": {
                "type": "integer",
                "deprecationMessage": "Does nothing"
            },
            "dnsEndpoint": {
                "type": "string",
                "description": "Exoscale DNS API endpoint (by default: https://api.exoscale.com/dns)\n"
            },
            "environment": {
                "type": "string"
            },
            "gzipUserData": {
                "type": "boolean",
                "description": "Defines if the user-data of compute instances should be gzipped (by default: true)\n"
            },
            "key": {
                "type": "string",
                "description": "Exoscale API key\n"
            },
            "profile": {
                "type": "string",
                "deprecationMessage": "Use region instead"
            },
            "region": {
                "type": "string",
                "description": "CloudStack ini configuration section name (by default: cloudstack)\n"
            },
            "secret": {
                "type": "string",
                "description": "Exoscale API secret\n",
                "secret": true
            },
            "timeout": {
                "type": "integer",
                "description": "Timeout in seconds for waiting on compute resources to become available (by default: 300)\n"
            },
            "token": {
                "type": "string",
                "deprecationMessage": "Use key instead"
            }
        },
        "requiredInputs": [
            "dnsEndpoint",
            "timeout"
        ]
    },
    "resources": {
        "exoscale:index/affinity:Affinity": {
            "description": "!\u003e **WARNING:** This resource is **DEPRECATED** and will be removed in the next major version. Please use exoscale.AntiAffinityGroup instead.\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The anti-affinity group name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the group (`host anti-affinity` is the only supported value).\n"
                },
                "virtualMachineIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The compute instances (IDs) members of the group.\n"
                }
            },
            "required": [
                "name",
                "virtualMachineIds"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the group.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The anti-affinity group name.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The type of the group (`host anti-affinity` is the only supported value).\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Affinity resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A free-form text describing the group.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The anti-affinity group name.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the group (`host anti-affinity` is the only supported value).\n",
                        "willReplaceOnChanges": true
                    },
                    "virtualMachineIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The compute instances (IDs) members of the group.\n"
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/antiAffinityGroup:AntiAffinityGroup": {
            "description": "\n\n\n## Import\n\nAn existing anti-affinity group may be imported by `\u003cID\u003e`console\n\n```sh\n $ pulumi import exoscale:index/antiAffinityGroup:AntiAffinityGroup \\\n```\n\n\n\n exoscale_anti_affinity_group.my_anti_affinity_group \\\n\n f81d4fae-7dec-11d0-a765-00a0c91e6bf6 ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The anti-affinity group name.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the group.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The anti-affinity group name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AntiAffinityGroup resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A free-form text describing the group.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The anti-affinity group name.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/compute:Compute": {
            "description": "!\u003e **WARNING:** This resource is **DEPRECATED** and will be removed in the next major version. Please use exoscale.ComputeInstance instead.\n",
            "properties": {
                "affinityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of anti-affinity groups (IDs; at creation time only; conflicts with `affinity_groups`).\n"
                },
                "affinityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of anti-affinity groups (names; at creation time only; conflicts with `affinity_group_ids`).\n"
                },
                "diskSize": {
                    "type": "integer",
                    "description": "The instance disk size (GiB; at least `10`).\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The displayed instance name. Note: if the `hostname` attribute is not set, this attribute is also used to set the OS' *hostname* during creation, so the value must contain only alphanumeric and hyphen (\"-\") characters; it can be changed to any character during a later update. If neither `display_name` or `hostname` attributes are set, a random value will be generated automatically.\n"
                },
                "gateway": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string",
                    "description": "The instance hostname, must contain only alphanumeric and hyphen (`-`) characters. If neither `display_name` or `hostname` attributes are set, a random value will be generated automatically. Note: updating this attribute's value requires to reboot the instance.\n"
                },
                "ip4": {
                    "type": "boolean",
                    "description": "Enable IPv4 on the instance (only supported value is `true`).\n"
                },
                "ip6": {
                    "type": "boolean",
                    "description": "Enable IPv6 on the instance (boolean; default: `false`).\n"
                },
                "ip6Address": {
                    "type": "string",
                    "description": "The instance (main network interface) IPv6 address (if enabled).\n"
                },
                "ip6Cidr": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The instance (main network interface) IPv4 address.\n"
                },
                "keyPair": {
                    "type": "string",
                    "description": "The SSH keypair (name) to authorize in the instance.\n"
                },
                "keyboard": {
                    "type": "string",
                    "description": "The keyboard layout configuration (`de`, `de-ch`, `es`, `fi`, `fr`, `fr-be`, `fr-ch`, `is`, `it`, `jp`, `nl-be`, `no`, `pt`, `uk`, `us`; at creation time only).\n"
                },
                "name": {
                    "type": "string",
                    "description": "(Deprecated) The instance hostname. Please use the `hostname` argument instead.\n",
                    "deprecationMessage": "use `hostname` attribute instead"
                },
                "password": {
                    "type": "string",
                    "description": "The instance initial password and/or encrypted password.\n",
                    "secret": true
                },
                "reverseDns": {
                    "type": "string",
                    "description": "The instance reverse DNS record (must end with a `.`; e.g: `my-instance.example.net.`).\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of security groups (IDs; conflicts with `security_groups`).\n"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of security groups (names; conflicts with `security_group_ids`).\n"
                },
                "size": {
                    "type": "string",
                    "description": "The instance size (`Tiny`, `Small`, `Medium`, `Large`, etc.)\n"
                },
                "state": {
                    "type": "string",
                    "description": "The instance state (`Running` or `Stopped`; default: `Running`)\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of tags (key/value). To remove all tags, set `tags = {}`.\n"
                },
                "template": {
                    "type": "string",
                    "description": "The compute instance template (name). Only *featured* templates are available, if you want to reference *custom templates* use the `template_id` attribute instead.\n"
                },
                "templateId": {
                    "type": "string",
                    "description": "The compute instance template (ID). Usage of the `exoscale.getComputeTemplate` data source is recommended.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "cloud-init configuration (no need to base64-encode or gzip it as the provider will take care of it).\n"
                },
                "userDataBase64": {
                    "type": "boolean",
                    "description": "was the cloud-init configuration base64 encoded\n"
                },
                "username": {
                    "type": "string",
                    "description": "The user to use to connect to the instance. If you've referenced a *custom template* in the resource, use the `exoscale.getComputeTemplate` data source `username` attribute instead.\n",
                    "deprecationMessage": "broken, use `compute_template` data source `username` attribute"
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale Zone name.\n"
                }
            },
            "required": [
                "affinityGroupIds",
                "affinityGroups",
                "diskSize",
                "displayName",
                "gateway",
                "hostname",
                "ip6Address",
                "ip6Cidr",
                "ipAddress",
                "name",
                "password",
                "securityGroupIds",
                "securityGroups",
                "state",
                "tags",
                "template",
                "templateId",
                "userDataBase64",
                "username",
                "zone"
            ],
            "inputProperties": {
                "affinityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of anti-affinity groups (IDs; at creation time only; conflicts with `affinity_groups`).\n",
                    "willReplaceOnChanges": true
                },
                "affinityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of anti-affinity groups (names; at creation time only; conflicts with `affinity_group_ids`).\n",
                    "willReplaceOnChanges": true
                },
                "diskSize": {
                    "type": "integer",
                    "description": "The instance disk size (GiB; at least `10`).\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The displayed instance name. Note: if the `hostname` attribute is not set, this attribute is also used to set the OS' *hostname* during creation, so the value must contain only alphanumeric and hyphen (\"-\") characters; it can be changed to any character during a later update. If neither `display_name` or `hostname` attributes are set, a random value will be generated automatically.\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "The instance hostname, must contain only alphanumeric and hyphen (`-`) characters. If neither `display_name` or `hostname` attributes are set, a random value will be generated automatically. Note: updating this attribute's value requires to reboot the instance.\n"
                },
                "ip4": {
                    "type": "boolean",
                    "description": "Enable IPv4 on the instance (only supported value is `true`).\n"
                },
                "ip6": {
                    "type": "boolean",
                    "description": "Enable IPv6 on the instance (boolean; default: `false`).\n"
                },
                "keyPair": {
                    "type": "string",
                    "description": "The SSH keypair (name) to authorize in the instance.\n",
                    "willReplaceOnChanges": true
                },
                "keyboard": {
                    "type": "string",
                    "description": "The keyboard layout configuration (`de`, `de-ch`, `es`, `fi`, `fr`, `fr-be`, `fr-ch`, `is`, `it`, `jp`, `nl-be`, `no`, `pt`, `uk`, `us`; at creation time only).\n"
                },
                "reverseDns": {
                    "type": "string",
                    "description": "The instance reverse DNS record (must end with a `.`; e.g: `my-instance.example.net.`).\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of security groups (IDs; conflicts with `security_groups`).\n"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of security groups (names; conflicts with `security_group_ids`).\n"
                },
                "size": {
                    "type": "string",
                    "description": "The instance size (`Tiny`, `Small`, `Medium`, `Large`, etc.)\n"
                },
                "state": {
                    "type": "string",
                    "description": "The instance state (`Running` or `Stopped`; default: `Running`)\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of tags (key/value). To remove all tags, set `tags = {}`.\n"
                },
                "template": {
                    "type": "string",
                    "description": "The compute instance template (name). Only *featured* templates are available, if you want to reference *custom templates* use the `template_id` attribute instead.\n",
                    "willReplaceOnChanges": true
                },
                "templateId": {
                    "type": "string",
                    "description": "The compute instance template (ID). Usage of the `exoscale.getComputeTemplate` data source is recommended.\n",
                    "willReplaceOnChanges": true
                },
                "userData": {
                    "type": "string",
                    "description": "cloud-init configuration (no need to base64-encode or gzip it as the provider will take care of it).\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale Zone name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "diskSize",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Compute resources.\n",
                "properties": {
                    "affinityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of anti-affinity groups (IDs; at creation time only; conflicts with `affinity_groups`).\n",
                        "willReplaceOnChanges": true
                    },
                    "affinityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of anti-affinity groups (names; at creation time only; conflicts with `affinity_group_ids`).\n",
                        "willReplaceOnChanges": true
                    },
                    "diskSize": {
                        "type": "integer",
                        "description": "The instance disk size (GiB; at least `10`).\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The displayed instance name. Note: if the `hostname` attribute is not set, this attribute is also used to set the OS' *hostname* during creation, so the value must contain only alphanumeric and hyphen (\"-\") characters; it can be changed to any character during a later update. If neither `display_name` or `hostname` attributes are set, a random value will be generated automatically.\n"
                    },
                    "gateway": {
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "The instance hostname, must contain only alphanumeric and hyphen (`-`) characters. If neither `display_name` or `hostname` attributes are set, a random value will be generated automatically. Note: updating this attribute's value requires to reboot the instance.\n"
                    },
                    "ip4": {
                        "type": "boolean",
                        "description": "Enable IPv4 on the instance (only supported value is `true`).\n"
                    },
                    "ip6": {
                        "type": "boolean",
                        "description": "Enable IPv6 on the instance (boolean; default: `false`).\n"
                    },
                    "ip6Address": {
                        "type": "string",
                        "description": "The instance (main network interface) IPv6 address (if enabled).\n"
                    },
                    "ip6Cidr": {
                        "type": "string"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "The instance (main network interface) IPv4 address.\n"
                    },
                    "keyPair": {
                        "type": "string",
                        "description": "The SSH keypair (name) to authorize in the instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "keyboard": {
                        "type": "string",
                        "description": "The keyboard layout configuration (`de`, `de-ch`, `es`, `fi`, `fr`, `fr-be`, `fr-ch`, `is`, `it`, `jp`, `nl-be`, `no`, `pt`, `uk`, `us`; at creation time only).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "(Deprecated) The instance hostname. Please use the `hostname` argument instead.\n",
                        "deprecationMessage": "use `hostname` attribute instead"
                    },
                    "password": {
                        "type": "string",
                        "description": "The instance initial password and/or encrypted password.\n",
                        "secret": true
                    },
                    "reverseDns": {
                        "type": "string",
                        "description": "The instance reverse DNS record (must end with a `.`; e.g: `my-instance.example.net.`).\n"
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of security groups (IDs; conflicts with `security_groups`).\n"
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of security groups (names; conflicts with `security_group_ids`).\n"
                    },
                    "size": {
                        "type": "string",
                        "description": "The instance size (`Tiny`, `Small`, `Medium`, `Large`, etc.)\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The instance state (`Running` or `Stopped`; default: `Running`)\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of tags (key/value). To remove all tags, set `tags = {}`.\n"
                    },
                    "template": {
                        "type": "string",
                        "description": "The compute instance template (name). Only *featured* templates are available, if you want to reference *custom templates* use the `template_id` attribute instead.\n",
                        "willReplaceOnChanges": true
                    },
                    "templateId": {
                        "type": "string",
                        "description": "The compute instance template (ID). Usage of the `exoscale.getComputeTemplate` data source is recommended.\n",
                        "willReplaceOnChanges": true
                    },
                    "userData": {
                        "type": "string",
                        "description": "cloud-init configuration (no need to base64-encode or gzip it as the provider will take care of it).\n"
                    },
                    "userDataBase64": {
                        "type": "boolean",
                        "description": "was the cloud-init configuration base64 encoded\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The user to use to connect to the instance. If you've referenced a *custom template* in the resource, use the `exoscale.getComputeTemplate` data source `username` attribute instead.\n",
                        "deprecationMessage": "broken, use `compute_template` data source `username` attribute"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The Exoscale Zone name.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/computeInstance:ComputeInstance": {
            "description": "\n\n\n## Import\n\nAn existing compute instance may be imported by `\u003cID\u003e@\u003czone\u003e`console\n\n```sh\n $ pulumi import exoscale:index/computeInstance:ComputeInstance \\\n```\n\n\n\n exoscale_compute_instance.my_instance \\\n\n f81d4fae-7dec-11d0-a765-00a0c91e6bf6@ch-gva-2 ",
            "properties": {
                "antiAffinityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of exoscale.AntiAffinityGroup (IDs) to attach to the instance (may only be set at creation time).\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The instance creation date.\n"
                },
                "deployTargetId": {
                    "type": "string",
                    "description": "A deploy target ID.\n"
                },
                "diskSize": {
                    "type": "integer",
                    "description": "The instance disk size (GiB; at least `10`). **WARNING**: updating this attribute stops/restarts the instance.\n"
                },
                "elasticIpIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of exoscale.ElasticIP (IDs) to attach to the instance.\n"
                },
                "ipv6": {
                    "type": "boolean",
                    "description": "Enable IPv6 on the instance (boolean; default: `false`).\n"
                },
                "ipv6Address": {
                    "type": "string",
                    "description": "The instance (main network interface) IPv6 address (if enabled).\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of key/value labels.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The compute instance name.\n"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/exoscale:index/ComputeInstanceNetworkInterface:ComputeInstanceNetworkInterface"
                    },
                    "description": "Private network interfaces (may be specified multiple times). Structure is documented below.\n"
                },
                "privateNetworkIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Deprecated) A list of private networks (IDs) attached to the instance. Please use the `network_interface.*.network_id` argument instead.\n",
                    "deprecationMessage": "Use the network_interface block instead."
                },
                "publicIpAddress": {
                    "type": "string",
                    "description": "The instance (main network interface) IPv4 address.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of exoscale.SecurityGroup (IDs) to attach to the instance.\n"
                },
                "sshKey": {
                    "type": "string",
                    "description": "The exoscale.SSHKey (name) to authorize in the instance (may only be set at creation time).\n"
                },
                "state": {
                    "type": "string",
                    "description": "The instance state (`running` or `stopped`; default: `running`).\n"
                },
                "templateId": {
                    "type": "string",
                    "description": "The exoscale.getComputeTemplate (ID) to use when creating the instance.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The instance type (`\u003cfamily\u003e.\u003csize\u003e`, e.g. `standard.medium`; use the [Exoscale CLI][cli] - `exo compute instance-type list` - for the list of available types). **WARNING**: updating this attribute stops/restarts the instance.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "[cloud-init][cloud-init] configuration (no need to base64-encode or gzip it as the provider will take care of it).\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale [Zone][zone] name.\n"
                }
            },
            "required": [
                "createdAt",
                "diskSize",
                "ipv6Address",
                "name",
                "privateNetworkIds",
                "publicIpAddress",
                "state",
                "templateId",
                "type",
                "zone"
            ],
            "inputProperties": {
                "antiAffinityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of exoscale.AntiAffinityGroup (IDs) to attach to the instance (may only be set at creation time).\n"
                },
                "deployTargetId": {
                    "type": "string",
                    "description": "A deploy target ID.\n",
                    "willReplaceOnChanges": true
                },
                "diskSize": {
                    "type": "integer",
                    "description": "The instance disk size (GiB; at least `10`). **WARNING**: updating this attribute stops/restarts the instance.\n"
                },
                "elasticIpIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of exoscale.ElasticIP (IDs) to attach to the instance.\n"
                },
                "ipv6": {
                    "type": "boolean",
                    "description": "Enable IPv6 on the instance (boolean; default: `false`).\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of key/value labels.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The compute instance name.\n"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/exoscale:index/ComputeInstanceNetworkInterface:ComputeInstanceNetworkInterface"
                    },
                    "description": "Private network interfaces (may be specified multiple times). Structure is documented below.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of exoscale.SecurityGroup (IDs) to attach to the instance.\n"
                },
                "sshKey": {
                    "type": "string",
                    "description": "The exoscale.SSHKey (name) to authorize in the instance (may only be set at creation time).\n"
                },
                "state": {
                    "type": "string",
                    "description": "The instance state (`running` or `stopped`; default: `running`).\n"
                },
                "templateId": {
                    "type": "string",
                    "description": "The exoscale.getComputeTemplate (ID) to use when creating the instance.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The instance type (`\u003cfamily\u003e.\u003csize\u003e`, e.g. `standard.medium`; use the [Exoscale CLI][cli] - `exo compute instance-type list` - for the list of available types). **WARNING**: updating this attribute stops/restarts the instance.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "[cloud-init][cloud-init] configuration (no need to base64-encode or gzip it as the provider will take care of it).\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale [Zone][zone] name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "templateId",
                "type",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ComputeInstance resources.\n",
                "properties": {
                    "antiAffinityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of exoscale.AntiAffinityGroup (IDs) to attach to the instance (may only be set at creation time).\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The instance creation date.\n"
                    },
                    "deployTargetId": {
                        "type": "string",
                        "description": "A deploy target ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "diskSize": {
                        "type": "integer",
                        "description": "The instance disk size (GiB; at least `10`). **WARNING**: updating this attribute stops/restarts the instance.\n"
                    },
                    "elasticIpIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of exoscale.ElasticIP (IDs) to attach to the instance.\n"
                    },
                    "ipv6": {
                        "type": "boolean",
                        "description": "Enable IPv6 on the instance (boolean; default: `false`).\n"
                    },
                    "ipv6Address": {
                        "type": "string",
                        "description": "The instance (main network interface) IPv6 address (if enabled).\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of key/value labels.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The compute instance name.\n"
                    },
                    "networkInterfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/exoscale:index/ComputeInstanceNetworkInterface:ComputeInstanceNetworkInterface"
                        },
                        "description": "Private network interfaces (may be specified multiple times). Structure is documented below.\n"
                    },
                    "privateNetworkIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Deprecated) A list of private networks (IDs) attached to the instance. Please use the `network_interface.*.network_id` argument instead.\n",
                        "deprecationMessage": "Use the network_interface block instead."
                    },
                    "publicIpAddress": {
                        "type": "string",
                        "description": "The instance (main network interface) IPv4 address.\n"
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of exoscale.SecurityGroup (IDs) to attach to the instance.\n"
                    },
                    "sshKey": {
                        "type": "string",
                        "description": "The exoscale.SSHKey (name) to authorize in the instance (may only be set at creation time).\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The instance state (`running` or `stopped`; default: `running`).\n"
                    },
                    "templateId": {
                        "type": "string",
                        "description": "The exoscale.getComputeTemplate (ID) to use when creating the instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The instance type (`\u003cfamily\u003e.\u003csize\u003e`, e.g. `standard.medium`; use the [Exoscale CLI][cli] - `exo compute instance-type list` - for the list of available types). **WARNING**: updating this attribute stops/restarts the instance.\n"
                    },
                    "userData": {
                        "type": "string",
                        "description": "[cloud-init][cloud-init] configuration (no need to base64-encode or gzip it as the provider will take care of it).\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The Exoscale [Zone][zone] name.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/database:Database": {
            "description": "\n\n\n## Import\n\nAn existing database service may be imported by `\u003cname\u003e@\u003czone\u003e`console\n\n```sh\n $ pulumi import exoscale:index/database:Database \\\n```\n\n\n\n exoscale_database.my_database \\\n\n my-database@ch-gva-2 ",
            "properties": {
                "caCertificate": {
                    "type": "string",
                    "description": "CA Certificate required to reach a DBaaS service through a TLS-protected connection.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation date of the database service.\n"
                },
                "diskSize": {
                    "type": "integer",
                    "description": "The disk size of the database service.\n"
                },
                "kafka": {
                    "$ref": "#/types/exoscale:index/DatabaseKafka:DatabaseKafka",
                    "description": "*kafka* database service type specific arguments. Structure is documented below.\n"
                },
                "maintenanceDow": {
                    "type": "string",
                    "description": "The day of week to perform the automated database service maintenance (`never`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`, `sunday`).\n"
                },
                "maintenanceTime": {
                    "type": "string",
                    "description": "The time of day to perform the automated database service maintenance (`HH:MM:SS`)\n"
                },
                "mysql": {
                    "$ref": "#/types/exoscale:index/DatabaseMysql:DatabaseMysql",
                    "description": "*mysql* database service type specific arguments. Structure is documented below.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the database service.\n"
                },
                "nodeCpus": {
                    "type": "integer",
                    "description": "The number of CPUs of the database service.\n"
                },
                "nodeMemory": {
                    "type": "integer",
                    "description": "The amount of memory of the database service.\n"
                },
                "nodes": {
                    "type": "integer",
                    "description": "The number of nodes of the database service.\n"
                },
                "opensearch": {
                    "$ref": "#/types/exoscale:index/DatabaseOpensearch:DatabaseOpensearch",
                    "description": "*opensearch* database service type specific arguments. Structure is documented below.\n"
                },
                "pg": {
                    "$ref": "#/types/exoscale:index/DatabasePg:DatabasePg",
                    "description": "*pg* database service type specific arguments. Structure is documented below.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "The plan of the database service (use the [Exoscale CLI][cli] - `exo dbaas type show \u003cTYPE\u003e` - for reference).\n"
                },
                "redis": {
                    "$ref": "#/types/exoscale:index/DatabaseRedis:DatabaseRedis",
                    "description": "*redis* database service type specific arguments. Structure is documented below.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The current state of the database service.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "The database service protection boolean flag against termination/power-off.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the database service (`kafka`, `mysql`, `opensearch`, `pg`, `redis`).\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date of the latest database service update.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "The database service connection URI.\n",
                    "secret": true
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale [Zone][zone] name.\n"
                }
            },
            "required": [
                "caCertificate",
                "createdAt",
                "diskSize",
                "maintenanceDow",
                "maintenanceTime",
                "name",
                "nodeCpus",
                "nodeMemory",
                "nodes",
                "plan",
                "state",
                "type",
                "updatedAt",
                "uri",
                "zone"
            ],
            "inputProperties": {
                "kafka": {
                    "$ref": "#/types/exoscale:index/DatabaseKafka:DatabaseKafka",
                    "description": "*kafka* database service type specific arguments. Structure is documented below.\n"
                },
                "maintenanceDow": {
                    "type": "string",
                    "description": "The day of week to perform the automated database service maintenance (`never`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`, `sunday`).\n"
                },
                "maintenanceTime": {
                    "type": "string",
                    "description": "The time of day to perform the automated database service maintenance (`HH:MM:SS`)\n"
                },
                "mysql": {
                    "$ref": "#/types/exoscale:index/DatabaseMysql:DatabaseMysql",
                    "description": "*mysql* database service type specific arguments. Structure is documented below.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the database service.\n",
                    "willReplaceOnChanges": true
                },
                "opensearch": {
                    "$ref": "#/types/exoscale:index/DatabaseOpensearch:DatabaseOpensearch",
                    "description": "*opensearch* database service type specific arguments. Structure is documented below.\n"
                },
                "pg": {
                    "$ref": "#/types/exoscale:index/DatabasePg:DatabasePg",
                    "description": "*pg* database service type specific arguments. Structure is documented below.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "The plan of the database service (use the [Exoscale CLI][cli] - `exo dbaas type show \u003cTYPE\u003e` - for reference).\n"
                },
                "redis": {
                    "$ref": "#/types/exoscale:index/DatabaseRedis:DatabaseRedis",
                    "description": "*redis* database service type specific arguments. Structure is documented below.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "The database service protection boolean flag against termination/power-off.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the database service (`kafka`, `mysql`, `opensearch`, `pg`, `redis`).\n",
                    "willReplaceOnChanges": true
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale [Zone][zone] name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "plan",
                "type",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Database resources.\n",
                "properties": {
                    "caCertificate": {
                        "type": "string",
                        "description": "CA Certificate required to reach a DBaaS service through a TLS-protected connection.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation date of the database service.\n"
                    },
                    "diskSize": {
                        "type": "integer",
                        "description": "The disk size of the database service.\n"
                    },
                    "kafka": {
                        "$ref": "#/types/exoscale:index/DatabaseKafka:DatabaseKafka",
                        "description": "*kafka* database service type specific arguments. Structure is documented below.\n"
                    },
                    "maintenanceDow": {
                        "type": "string",
                        "description": "The day of week to perform the automated database service maintenance (`never`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`, `sunday`).\n"
                    },
                    "maintenanceTime": {
                        "type": "string",
                        "description": "The time of day to perform the automated database service maintenance (`HH:MM:SS`)\n"
                    },
                    "mysql": {
                        "$ref": "#/types/exoscale:index/DatabaseMysql:DatabaseMysql",
                        "description": "*mysql* database service type specific arguments. Structure is documented below.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the database service.\n",
                        "willReplaceOnChanges": true
                    },
                    "nodeCpus": {
                        "type": "integer",
                        "description": "The number of CPUs of the database service.\n"
                    },
                    "nodeMemory": {
                        "type": "integer",
                        "description": "The amount of memory of the database service.\n"
                    },
                    "nodes": {
                        "type": "integer",
                        "description": "The number of nodes of the database service.\n"
                    },
                    "opensearch": {
                        "$ref": "#/types/exoscale:index/DatabaseOpensearch:DatabaseOpensearch",
                        "description": "*opensearch* database service type specific arguments. Structure is documented below.\n"
                    },
                    "pg": {
                        "$ref": "#/types/exoscale:index/DatabasePg:DatabasePg",
                        "description": "*pg* database service type specific arguments. Structure is documented below.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "The plan of the database service (use the [Exoscale CLI][cli] - `exo dbaas type show \u003cTYPE\u003e` - for reference).\n"
                    },
                    "redis": {
                        "$ref": "#/types/exoscale:index/DatabaseRedis:DatabaseRedis",
                        "description": "*redis* database service type specific arguments. Structure is documented below.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The current state of the database service.\n"
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "The database service protection boolean flag against termination/power-off.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the database service (`kafka`, `mysql`, `opensearch`, `pg`, `redis`).\n",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date of the latest database service update.\n"
                    },
                    "uri": {
                        "type": "string",
                        "description": "The database service connection URI.\n",
                        "secret": true
                    },
                    "zone": {
                        "type": "string",
                        "description": "The Exoscale [Zone][zone] name.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/domain:Domain": {
            "description": "\n\n\n## Import\n\nAn existing DNS domain may be imported by `\u003cname\u003e`console\n\n```sh\n $ pulumi import exoscale:index/domain:Domain \\\n```\n\n\n\n exoscale_domain.my_domain \\\n\n my.domain ",
            "properties": {
                "autoRenew": {
                    "type": "boolean",
                    "description": "Whether the DNS domain has automatic renewal enabled (boolean).\n",
                    "deprecationMessage": "Not used, will be removed in the future"
                },
                "expiresOn": {
                    "type": "string",
                    "description": "The domain expiration date, if known.\n",
                    "deprecationMessage": "Not used, will be removed in the future"
                },
                "name": {
                    "type": "string",
                    "description": "The DNS domain name.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The domain state.\n",
                    "deprecationMessage": "Not used, will be removed in the future"
                },
                "token": {
                    "type": "string",
                    "description": "A security token that can be used as an alternative way to manage DNS domains via the Exoscale API.\n",
                    "deprecationMessage": "Not used, will be removed in the future"
                }
            },
            "required": [
                "autoRenew",
                "expiresOn",
                "name",
                "state",
                "token"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The DNS domain name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Domain resources.\n",
                "properties": {
                    "autoRenew": {
                        "type": "boolean",
                        "description": "Whether the DNS domain has automatic renewal enabled (boolean).\n",
                        "deprecationMessage": "Not used, will be removed in the future"
                    },
                    "expiresOn": {
                        "type": "string",
                        "description": "The domain expiration date, if known.\n",
                        "deprecationMessage": "Not used, will be removed in the future"
                    },
                    "name": {
                        "type": "string",
                        "description": "The DNS domain name.\n",
                        "willReplaceOnChanges": true
                    },
                    "state": {
                        "type": "string",
                        "description": "The domain state.\n",
                        "deprecationMessage": "Not used, will be removed in the future"
                    },
                    "token": {
                        "type": "string",
                        "description": "A security token that can be used as an alternative way to manage DNS domains via the Exoscale API.\n",
                        "deprecationMessage": "Not used, will be removed in the future"
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/domainRecord:DomainRecord": {
            "description": "\n\n\n## Import\n\nAn existing DNS domain record may be imported by `\u003cID\u003e`console\n\n```sh\n $ pulumi import exoscale:index/domainRecord:DomainRecord \\\n```\n\n\n\n exoscale_domain_record.my_host \\\n\n f81d4fae-7dec-11d0-a765-00a0c91e6bf6 ",
            "properties": {
                "content": {
                    "type": "string",
                    "description": "The record value.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The parent exoscale.Domain to attach the record to.\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "The record *Fully Qualified Domain Name* (FQDN). Useful for aliasing `A`/`AAAA` records with `CNAME`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The record name, Leave blank (`\"\"`) to create a root record (similar to using `@` in a DNS zone file).\n"
                },
                "prio": {
                    "type": "integer",
                    "description": "The record priority (for types that support it; minimum `0`).\n"
                },
                "recordType": {
                    "type": "string",
                    "description": "The record type (`A`, `AAAA`, `ALIAS`, `CAA`, `CNAME`, `HINFO`, `MX`, `NAPTR`, `NS`, `POOL`, `SPF`, `SRV`, `SSHFP`, `TXT`, `URL`).\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The record TTL (seconds; minimum `0`; default: `3600`).\n"
                }
            },
            "required": [
                "content",
                "domain",
                "hostname",
                "name",
                "prio",
                "recordType",
                "ttl"
            ],
            "inputProperties": {
                "content": {
                    "type": "string",
                    "description": "The record value.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The parent exoscale.Domain to attach the record to.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The record name, Leave blank (`\"\"`) to create a root record (similar to using `@` in a DNS zone file).\n"
                },
                "prio": {
                    "type": "integer",
                    "description": "The record priority (for types that support it; minimum `0`).\n"
                },
                "recordType": {
                    "type": "string",
                    "description": "The record type (`A`, `AAAA`, `ALIAS`, `CAA`, `CNAME`, `HINFO`, `MX`, `NAPTR`, `NS`, `POOL`, `SPF`, `SRV`, `SSHFP`, `TXT`, `URL`).\n",
                    "willReplaceOnChanges": true
                },
                "ttl": {
                    "type": "integer",
                    "description": "The record TTL (seconds; minimum `0`; default: `3600`).\n"
                }
            },
            "requiredInputs": [
                "content",
                "domain",
                "recordType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DomainRecord resources.\n",
                "properties": {
                    "content": {
                        "type": "string",
                        "description": "The record value.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "The parent exoscale.Domain to attach the record to.\n",
                        "willReplaceOnChanges": true
                    },
                    "hostname": {
                        "type": "string",
                        "description": "The record *Fully Qualified Domain Name* (FQDN). Useful for aliasing `A`/`AAAA` records with `CNAME`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The record name, Leave blank (`\"\"`) to create a root record (similar to using `@` in a DNS zone file).\n"
                    },
                    "prio": {
                        "type": "integer",
                        "description": "The record priority (for types that support it; minimum `0`).\n"
                    },
                    "recordType": {
                        "type": "string",
                        "description": "The record type (`A`, `AAAA`, `ALIAS`, `CAA`, `CNAME`, `HINFO`, `MX`, `NAPTR`, `NS`, `POOL`, `SPF`, `SRV`, `SSHFP`, `TXT`, `URL`).\n",
                        "willReplaceOnChanges": true
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The record TTL (seconds; minimum `0`; default: `3600`).\n"
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/elasticIP:ElasticIP": {
            "description": "Manage Exoscale [Elastic IPs (EIP)](https://community.exoscale.com/documentation/compute/eip/).\n\nCorresponding data source: exoscale_elastic_ip.\n\n\n## Import\n\nAn existing Elastic IP (EIP) may be imported by `\u003cID\u003e@\u003czone\u003e`console\n\n```sh\n $ pulumi import exoscale:index/elasticIP:ElasticIP \\\n```\n\n\n\n exoscale_elastic_ip.my_elastic_ip \\\n\n f81d4fae-7dec-11d0-a765-00a0c91e6bf6@ch-gva-2 ",
            "properties": {
                "addressFamily": {
                    "type": "string",
                    "description": "The Elastic IP (EIP) address family (`inet4` or `inet6`; default: `inet4`).\n"
                },
                "cidr": {
                    "type": "string",
                    "description": "The Elastic IP (EIP) CIDR.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the Elastic IP (EIP).\n"
                },
                "healthcheck": {
                    "$ref": "#/types/exoscale:index/ElasticIPHealthcheck:ElasticIPHealthcheck",
                    "description": "Healthcheck configuration for *managed* EIPs. Structure is documented below.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The Elastic IP (EIP) IPv4 or IPv6 address.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale [Zone][zone] name.\n"
                }
            },
            "required": [
                "addressFamily",
                "cidr",
                "description",
                "healthcheck",
                "ipAddress",
                "zone"
            ],
            "inputProperties": {
                "addressFamily": {
                    "type": "string",
                    "description": "The Elastic IP (EIP) address family (`inet4` or `inet6`; default: `inet4`).\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the Elastic IP (EIP).\n",
                    "willReplaceOnChanges": true
                },
                "healthcheck": {
                    "$ref": "#/types/exoscale:index/ElasticIPHealthcheck:ElasticIPHealthcheck",
                    "description": "Healthcheck configuration for *managed* EIPs. Structure is documented below.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale [Zone][zone] name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElasticIP resources.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "The Elastic IP (EIP) address family (`inet4` or `inet6`; default: `inet4`).\n",
                        "willReplaceOnChanges": true
                    },
                    "cidr": {
                        "type": "string",
                        "description": "The Elastic IP (EIP) CIDR.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free-form text describing the Elastic IP (EIP).\n",
                        "willReplaceOnChanges": true
                    },
                    "healthcheck": {
                        "$ref": "#/types/exoscale:index/ElasticIPHealthcheck:ElasticIPHealthcheck",
                        "description": "Healthcheck configuration for *managed* EIPs. Structure is documented below.\n"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "The Elastic IP (EIP) IPv4 or IPv6 address.\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The Exoscale [Zone][zone] name.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/iAMAccessKey:IAMAccessKey": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The IAM access key (identifier).\n",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "The IAM access key name.\n"
                },
                "operations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of API operations to restrict the key to.\n"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of API [resources][iam-resource] to restrict the key to (`\u003cdomain\u003e/\u003ctype\u003e:\u003cname\u003e`).\n"
                },
                "secret": {
                    "type": "string",
                    "description": "(Sensitive) The key secret.\n",
                    "secret": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to restrict the key to.\n"
                },
                "tagsOperations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "key",
                "name",
                "secret",
                "tagsOperations"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The IAM access key name.\n",
                    "willReplaceOnChanges": true
                },
                "operations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of API operations to restrict the key to.\n",
                    "willReplaceOnChanges": true
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of API [resources][iam-resource] to restrict the key to (`\u003cdomain\u003e/\u003ctype\u003e:\u003cname\u003e`).\n",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to restrict the key to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IAMAccessKey resources.\n",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "The IAM access key (identifier).\n",
                        "secret": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The IAM access key name.\n",
                        "willReplaceOnChanges": true
                    },
                    "operations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of API operations to restrict the key to.\n",
                        "willReplaceOnChanges": true
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of API [resources][iam-resource] to restrict the key to (`\u003cdomain\u003e/\u003ctype\u003e:\u003cname\u003e`).\n",
                        "willReplaceOnChanges": true
                    },
                    "secret": {
                        "type": "string",
                        "description": "(Sensitive) The key secret.\n",
                        "secret": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to restrict the key to.\n",
                        "willReplaceOnChanges": true
                    },
                    "tagsOperations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/iPAddress:IPAddress": {
            "description": "!\u003e **WARNING:** This resource is **DEPRECATED** and will be removed in the next major version. Please use exoscale.ElasticIP instead.\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the Elastic IP (EIP).\n"
                },
                "healthcheckInterval": {
                    "type": "integer",
                    "description": "The healthcheck probing interval (seconds; must be between `5` and `300`).\n"
                },
                "healthcheckMode": {
                    "type": "string",
                    "description": "The healthcheck probing mode (must be `tcp`, `http` or `https`).\n"
                },
                "healthcheckPath": {
                    "type": "string",
                    "description": "The healthcheck probe HTTP request path (must be specified in `http`/`https` modes).\n"
                },
                "healthcheckPort": {
                    "type": "integer",
                    "description": "The healthcheck service port to probe (must be between `1` and `65535`).\n"
                },
                "healthcheckStrikesFail": {
                    "type": "integer",
                    "description": "The number of unsuccessful healthcheck probes before considering the target unhealthy (must be between `1` and `20`).\n"
                },
                "healthcheckStrikesOk": {
                    "type": "integer",
                    "description": "The number of successful healthcheck probes before considering the target healthy (must be between `1` and `20`).\n"
                },
                "healthcheckTimeout": {
                    "type": "integer",
                    "description": "The time in seconds before considering a healthcheck probing failed (must be between `2` and `60`).\n"
                },
                "healthcheckTlsSkipVerify": {
                    "type": "boolean",
                    "description": "Disable TLS certificate validation in `https` mode (boolean; default: `false`). Note: this parameter can only be changed to `true`, it cannot be reset to `false` later on (requires a resource re-creation).\n"
                },
                "healthcheckTlsSni": {
                    "type": "string",
                    "description": "The healthcheck TLS server name to specify in `https` mode. Note: this parameter can only be changed to a non-empty value, it cannot be reset to its default empty value later on (requires a resource re-creation).\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The Elastic IP (EIP) IPv4 address.\n"
                },
                "reverseDns": {
                    "type": "string",
                    "description": "The EIP reverse DNS record (must end with a `.`; e.g: `my-eip.example.net.`).\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A dictionary of tags (key/value). To remove all tags, set `tags = {}`.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale Zone name\n"
                }
            },
            "required": [
                "ipAddress",
                "tags",
                "zone"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the Elastic IP (EIP).\n"
                },
                "healthcheckInterval": {
                    "type": "integer",
                    "description": "The healthcheck probing interval (seconds; must be between `5` and `300`).\n"
                },
                "healthcheckMode": {
                    "type": "string",
                    "description": "The healthcheck probing mode (must be `tcp`, `http` or `https`).\n",
                    "willReplaceOnChanges": true
                },
                "healthcheckPath": {
                    "type": "string",
                    "description": "The healthcheck probe HTTP request path (must be specified in `http`/`https` modes).\n"
                },
                "healthcheckPort": {
                    "type": "integer",
                    "description": "The healthcheck service port to probe (must be between `1` and `65535`).\n"
                },
                "healthcheckStrikesFail": {
                    "type": "integer",
                    "description": "The number of unsuccessful healthcheck probes before considering the target unhealthy (must be between `1` and `20`).\n"
                },
                "healthcheckStrikesOk": {
                    "type": "integer",
                    "description": "The number of successful healthcheck probes before considering the target healthy (must be between `1` and `20`).\n"
                },
                "healthcheckTimeout": {
                    "type": "integer",
                    "description": "The time in seconds before considering a healthcheck probing failed (must be between `2` and `60`).\n"
                },
                "healthcheckTlsSkipVerify": {
                    "type": "boolean",
                    "description": "Disable TLS certificate validation in `https` mode (boolean; default: `false`). Note: this parameter can only be changed to `true`, it cannot be reset to `false` later on (requires a resource re-creation).\n"
                },
                "healthcheckTlsSni": {
                    "type": "string",
                    "description": "The healthcheck TLS server name to specify in `https` mode. Note: this parameter can only be changed to a non-empty value, it cannot be reset to its default empty value later on (requires a resource re-creation).\n"
                },
                "reverseDns": {
                    "type": "string",
                    "description": "The EIP reverse DNS record (must end with a `.`; e.g: `my-eip.example.net.`).\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A dictionary of tags (key/value). To remove all tags, set `tags = {}`.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale Zone name\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IPAddress resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A free-form text describing the Elastic IP (EIP).\n"
                    },
                    "healthcheckInterval": {
                        "type": "integer",
                        "description": "The healthcheck probing interval (seconds; must be between `5` and `300`).\n"
                    },
                    "healthcheckMode": {
                        "type": "string",
                        "description": "The healthcheck probing mode (must be `tcp`, `http` or `https`).\n",
                        "willReplaceOnChanges": true
                    },
                    "healthcheckPath": {
                        "type": "string",
                        "description": "The healthcheck probe HTTP request path (must be specified in `http`/`https` modes).\n"
                    },
                    "healthcheckPort": {
                        "type": "integer",
                        "description": "The healthcheck service port to probe (must be between `1` and `65535`).\n"
                    },
                    "healthcheckStrikesFail": {
                        "type": "integer",
                        "description": "The number of unsuccessful healthcheck probes before considering the target unhealthy (must be between `1` and `20`).\n"
                    },
                    "healthcheckStrikesOk": {
                        "type": "integer",
                        "description": "The number of successful healthcheck probes before considering the target healthy (must be between `1` and `20`).\n"
                    },
                    "healthcheckTimeout": {
                        "type": "integer",
                        "description": "The time in seconds before considering a healthcheck probing failed (must be between `2` and `60`).\n"
                    },
                    "healthcheckTlsSkipVerify": {
                        "type": "boolean",
                        "description": "Disable TLS certificate validation in `https` mode (boolean; default: `false`). Note: this parameter can only be changed to `true`, it cannot be reset to `false` later on (requires a resource re-creation).\n"
                    },
                    "healthcheckTlsSni": {
                        "type": "string",
                        "description": "The healthcheck TLS server name to specify in `https` mode. Note: this parameter can only be changed to a non-empty value, it cannot be reset to its default empty value later on (requires a resource re-creation).\n"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "The Elastic IP (EIP) IPv4 address.\n"
                    },
                    "reverseDns": {
                        "type": "string",
                        "description": "The EIP reverse DNS record (must end with a `.`; e.g: `my-eip.example.net.`).\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A dictionary of tags (key/value). To remove all tags, set `tags = {}`.\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The Exoscale Zone name\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/instancePool:InstancePool": {
            "description": "\n\n\n## Import\n\nAn existing instance pool may be imported by `\u003cID\u003e@\u003czone\u003e`console\n\n```sh\n $ pulumi import exoscale:index/instancePool:InstancePool \\\n```\n\n\n\n exoscale_instance_pool.my_instance_pool \\\n\n f81d4fae-7dec-11d0-a765-00a0c91e6bf6@ch-gva-2 ",
            "properties": {
                "affinityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of exoscale.AntiAffinityGroup (IDs; may only be set at creation time).\n"
                },
                "deployTargetId": {
                    "type": "string",
                    "description": "A deploy target ID.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the pool.\n"
                },
                "diskSize": {
                    "type": "integer",
                    "description": "The managed instances disk size (GiB).\n"
                },
                "elasticIpIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of exoscale.ElasticIP (IDs).\n"
                },
                "instancePrefix": {
                    "type": "string",
                    "description": "The string used to prefix managed instances name (default: `pool`).\n"
                },
                "instanceType": {
                    "type": "string",
                    "description": "The managed compute instances type (`\u003cfamily\u003e.\u003csize\u003e`, e.g. `standard.medium`; use the [Exoscale CLI][cli] - `exo compute instance-type list` - for the list of available types).\n"
                },
                "instances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/exoscale:index/InstancePoolInstance:InstancePoolInstance"
                    },
                    "description": "The list of managed instances. Structure is documented below.\n"
                },
                "ipv6": {
                    "type": "boolean",
                    "description": "Enable IPv6 on managed instances (boolean; default: `false`).\n"
                },
                "keyPair": {
                    "type": "string",
                    "description": "The exoscale.SSHKey (name) to authorize in the managed instances.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of key/value labels.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The instance pool name.\n"
                },
                "networkIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of exoscale.PrivateNetwork (IDs).\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of exoscale.SecurityGroup (IDs).\n"
                },
                "serviceOffering": {
                    "type": "string",
                    "description": "The managed instances type. Please use the `instance_type` argument instead.\n",
                    "deprecationMessage": "This attribute has been replaced by \"instance_type\"."
                },
                "size": {
                    "type": "integer",
                    "description": "The number of managed instances.\n"
                },
                "state": {
                    "type": "string"
                },
                "templateId": {
                    "type": "string",
                    "description": "The exoscale.getComputeTemplate (ID) to use when creating the managed instances.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "[cloud-init][cloud-init] configuration to apply to the managed instances (no need to base64-encode or gzip it as the provider will take care of it).\n"
                },
                "virtualMachines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Deprecated) The list of managed instances (IDs). Please use the `instances.*.id` attribute instead.\n",
                    "deprecationMessage": "Use the instances exported attribute instead."
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale [Zone][zone] name.\n"
                }
            },
            "required": [
                "diskSize",
                "instanceType",
                "instances",
                "name",
                "serviceOffering",
                "size",
                "state",
                "templateId",
                "virtualMachines",
                "zone"
            ],
            "inputProperties": {
                "affinityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of exoscale.AntiAffinityGroup (IDs; may only be set at creation time).\n"
                },
                "deployTargetId": {
                    "type": "string",
                    "description": "A deploy target ID.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the pool.\n"
                },
                "diskSize": {
                    "type": "integer",
                    "description": "The managed instances disk size (GiB).\n"
                },
                "elasticIpIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of exoscale.ElasticIP (IDs).\n"
                },
                "instancePrefix": {
                    "type": "string",
                    "description": "The string used to prefix managed instances name (default: `pool`).\n"
                },
                "instanceType": {
                    "type": "string",
                    "description": "The managed compute instances type (`\u003cfamily\u003e.\u003csize\u003e`, e.g. `standard.medium`; use the [Exoscale CLI][cli] - `exo compute instance-type list` - for the list of available types).\n"
                },
                "instances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/exoscale:index/InstancePoolInstance:InstancePoolInstance"
                    },
                    "description": "The list of managed instances. Structure is documented below.\n"
                },
                "ipv6": {
                    "type": "boolean",
                    "description": "Enable IPv6 on managed instances (boolean; default: `false`).\n"
                },
                "keyPair": {
                    "type": "string",
                    "description": "The exoscale.SSHKey (name) to authorize in the managed instances.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of key/value labels.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The instance pool name.\n"
                },
                "networkIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of exoscale.PrivateNetwork (IDs).\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of exoscale.SecurityGroup (IDs).\n"
                },
                "serviceOffering": {
                    "type": "string",
                    "description": "The managed instances type. Please use the `instance_type` argument instead.\n",
                    "deprecationMessage": "This attribute has been replaced by \"instance_type\"."
                },
                "size": {
                    "type": "integer",
                    "description": "The number of managed instances.\n"
                },
                "state": {
                    "type": "string"
                },
                "templateId": {
                    "type": "string",
                    "description": "The exoscale.getComputeTemplate (ID) to use when creating the managed instances.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "[cloud-init][cloud-init] configuration to apply to the managed instances (no need to base64-encode or gzip it as the provider will take care of it).\n"
                },
                "virtualMachines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Deprecated) The list of managed instances (IDs). Please use the `instances.*.id` attribute instead.\n",
                    "deprecationMessage": "Use the instances exported attribute instead."
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale [Zone][zone] name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "size",
                "templateId",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InstancePool resources.\n",
                "properties": {
                    "affinityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of exoscale.AntiAffinityGroup (IDs; may only be set at creation time).\n"
                    },
                    "deployTargetId": {
                        "type": "string",
                        "description": "A deploy target ID.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free-form text describing the pool.\n"
                    },
                    "diskSize": {
                        "type": "integer",
                        "description": "The managed instances disk size (GiB).\n"
                    },
                    "elasticIpIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of exoscale.ElasticIP (IDs).\n"
                    },
                    "instancePrefix": {
                        "type": "string",
                        "description": "The string used to prefix managed instances name (default: `pool`).\n"
                    },
                    "instanceType": {
                        "type": "string",
                        "description": "The managed compute instances type (`\u003cfamily\u003e.\u003csize\u003e`, e.g. `standard.medium`; use the [Exoscale CLI][cli] - `exo compute instance-type list` - for the list of available types).\n"
                    },
                    "instances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/exoscale:index/InstancePoolInstance:InstancePoolInstance"
                        },
                        "description": "The list of managed instances. Structure is documented below.\n"
                    },
                    "ipv6": {
                        "type": "boolean",
                        "description": "Enable IPv6 on managed instances (boolean; default: `false`).\n"
                    },
                    "keyPair": {
                        "type": "string",
                        "description": "The exoscale.SSHKey (name) to authorize in the managed instances.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of key/value labels.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The instance pool name.\n"
                    },
                    "networkIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of exoscale.PrivateNetwork (IDs).\n"
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of exoscale.SecurityGroup (IDs).\n"
                    },
                    "serviceOffering": {
                        "type": "string",
                        "description": "The managed instances type. Please use the `instance_type` argument instead.\n",
                        "deprecationMessage": "This attribute has been replaced by \"instance_type\"."
                    },
                    "size": {
                        "type": "integer",
                        "description": "The number of managed instances.\n"
                    },
                    "state": {
                        "type": "string"
                    },
                    "templateId": {
                        "type": "string",
                        "description": "The exoscale.getComputeTemplate (ID) to use when creating the managed instances.\n"
                    },
                    "userData": {
                        "type": "string",
                        "description": "[cloud-init][cloud-init] configuration to apply to the managed instances (no need to base64-encode or gzip it as the provider will take care of it).\n"
                    },
                    "virtualMachines": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Deprecated) The list of managed instances (IDs). Please use the `instances.*.id` attribute instead.\n",
                        "deprecationMessage": "Use the instances exported attribute instead."
                    },
                    "zone": {
                        "type": "string",
                        "description": "The Exoscale [Zone][zone] name.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/nIC:NIC": {
            "description": "!\u003e **WARNING:** This resource is **DEPRECATED** and will be removed in the next major version. Please use exoscale.ComputeInstance `network_interface` block instead.\n",
            "properties": {
                "computeId": {
                    "type": "string",
                    "description": "The compute instance ID.\n"
                },
                "gateway": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The IPv4 address to request as static DHCP lease if the NIC is attached to a *managed* private network.\n"
                },
                "macAddress": {
                    "type": "string",
                    "description": "The NIC MAC address.\n"
                },
                "netmask": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string",
                    "description": "The private network ID.\n"
                }
            },
            "required": [
                "computeId",
                "gateway",
                "ipAddress",
                "macAddress",
                "netmask",
                "networkId"
            ],
            "inputProperties": {
                "computeId": {
                    "type": "string",
                    "description": "The compute instance ID.\n",
                    "willReplaceOnChanges": true
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The IPv4 address to request as static DHCP lease if the NIC is attached to a *managed* private network.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The private network ID.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "computeId",
                "networkId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NIC resources.\n",
                "properties": {
                    "computeId": {
                        "type": "string",
                        "description": "The compute instance ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "gateway": {
                        "type": "string"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "The IPv4 address to request as static DHCP lease if the NIC is attached to a *managed* private network.\n"
                    },
                    "macAddress": {
                        "type": "string",
                        "description": "The NIC MAC address.\n"
                    },
                    "netmask": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The private network ID.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/nLB:NLB": {
            "description": "\n\n\n## Import\n\nAn existing network load balancer (NLB) may be imported by `\u003cID\u003e@\u003czone\u003e`console\n\n```sh\n $ pulumi import exoscale:index/nLB:NLB \\\n```\n\n\n\n exoscale_nlb.my_nlb \\\n\n f81d4fae-7dec-11d0-a765-00a0c91e6bf6@ch-gva-2 ",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The NLB creation date.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the NLB.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The NLB IPv4 address.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of key/value labels.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The network load balancer (NLB) name.\n"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of the exoscale.NLBService (names).\n"
                },
                "state": {
                    "type": "string",
                    "description": "The current NLB state.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale [Zone][zone] name.\n"
                }
            },
            "required": [
                "createdAt",
                "ipAddress",
                "name",
                "services",
                "state",
                "zone"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the NLB.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of key/value labels.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The network load balancer (NLB) name.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale [Zone][zone] name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NLB resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The NLB creation date.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free-form text describing the NLB.\n"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "The NLB IPv4 address.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of key/value labels.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The network load balancer (NLB) name.\n"
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of the exoscale.NLBService (names).\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The current NLB state.\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The Exoscale [Zone][zone] name.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/nLBService:NLBService": {
            "description": "\n\n\n## Import\n\nAn existing NLB service may be imported by `\u003cnlb-ID\u003e/\u003cservice-ID\u003e@\u003czone\u003e`console\n\n```sh\n $ pulumi import exoscale:index/nLBService:NLBService \\\n```\n\n\n\n exoscale_nlb_service.my_nlb_service \\\n\n f81d4fae-7dec-11d0-a765-00a0c91e6bf6/9ecc6b8b-73d4-4211-8ced-f7f29bb79524@ch-gva-2 ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the NLB service.\n"
                },
                "healthchecks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/exoscale:index/NLBServiceHealthcheck:NLBServiceHealthcheck"
                    },
                    "description": "The service health checking configuration (may only bet set at creation time). Structure is documented below.\n"
                },
                "instancePoolId": {
                    "type": "string",
                    "description": "The exoscale.InstancePool (ID) to forward traffic to.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The NLB service name.\n"
                },
                "nlbId": {
                    "type": "string",
                    "description": "The parent exoscale.NLB ID.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The healthcheck port.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol (`tcp`|`udp`; default: `tcp`).\n"
                },
                "state": {
                    "type": "string"
                },
                "strategy": {
                    "type": "string",
                    "description": "The strategy (`round-robin`|`source-hash`; default: `round-robin`).\n"
                },
                "targetPort": {
                    "type": "integer",
                    "description": "The (TCP/UDP) port to forward traffic to (on target instance pool members).\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale [Zone][zone] name.\n"
                }
            },
            "required": [
                "healthchecks",
                "instancePoolId",
                "name",
                "nlbId",
                "port",
                "state",
                "targetPort",
                "zone"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the NLB service.\n"
                },
                "healthchecks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/exoscale:index/NLBServiceHealthcheck:NLBServiceHealthcheck"
                    },
                    "description": "The service health checking configuration (may only bet set at creation time). Structure is documented below.\n"
                },
                "instancePoolId": {
                    "type": "string",
                    "description": "The exoscale.InstancePool (ID) to forward traffic to.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The NLB service name.\n"
                },
                "nlbId": {
                    "type": "string",
                    "description": "The parent exoscale.NLB ID.\n",
                    "willReplaceOnChanges": true
                },
                "port": {
                    "type": "integer",
                    "description": "The healthcheck port.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol (`tcp`|`udp`; default: `tcp`).\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "The strategy (`round-robin`|`source-hash`; default: `round-robin`).\n"
                },
                "targetPort": {
                    "type": "integer",
                    "description": "The (TCP/UDP) port to forward traffic to (on target instance pool members).\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale [Zone][zone] name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "healthchecks",
                "instancePoolId",
                "nlbId",
                "port",
                "targetPort",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NLBService resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A free-form text describing the NLB service.\n"
                    },
                    "healthchecks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/exoscale:index/NLBServiceHealthcheck:NLBServiceHealthcheck"
                        },
                        "description": "The service health checking configuration (may only bet set at creation time). Structure is documented below.\n"
                    },
                    "instancePoolId": {
                        "type": "string",
                        "description": "The exoscale.InstancePool (ID) to forward traffic to.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The NLB service name.\n"
                    },
                    "nlbId": {
                        "type": "string",
                        "description": "The parent exoscale.NLB ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "The healthcheck port.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "The protocol (`tcp`|`udp`; default: `tcp`).\n"
                    },
                    "state": {
                        "type": "string"
                    },
                    "strategy": {
                        "type": "string",
                        "description": "The strategy (`round-robin`|`source-hash`; default: `round-robin`).\n"
                    },
                    "targetPort": {
                        "type": "integer",
                        "description": "The (TCP/UDP) port to forward traffic to (on target instance pool members).\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The Exoscale [Zone][zone] name.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/network:Network": {
            "description": "!\u003e **WARNING:** This resource is **DEPRECATED** and will be removed in the next major version. Please use exoscale.PrivateNetwork instead.\n",
            "properties": {
                "displayText": {
                    "type": "string",
                    "description": "A free-form text describing the network.\n"
                },
                "endIp": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The private network name.\n"
                },
                "netmask": {
                    "type": "string",
                    "description": "The network mask defining the IP network allowed for static leases (see `exoscale.NIC` resource). Required for *managed* private networks.\n* `start_ip`/`end_ip` - The first/last IP addresses used by the DHCP service for dynamic leases. Required for *managed* private networks.\n"
                },
                "networkOffering": {
                    "type": "string",
                    "deprecationMessage": "This attribute is deprecated, please remove it from your configuration."
                },
                "startIp": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of tags (key/value). To remove all tags, set `tags = {}`.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale Zone name.\n"
                }
            },
            "required": [
                "displayText",
                "name",
                "tags",
                "zone"
            ],
            "inputProperties": {
                "displayText": {
                    "type": "string",
                    "description": "A free-form text describing the network.\n"
                },
                "endIp": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The private network name.\n"
                },
                "netmask": {
                    "type": "string",
                    "description": "The network mask defining the IP network allowed for static leases (see `exoscale.NIC` resource). Required for *managed* private networks.\n* `start_ip`/`end_ip` - The first/last IP addresses used by the DHCP service for dynamic leases. Required for *managed* private networks.\n"
                },
                "networkOffering": {
                    "type": "string",
                    "deprecationMessage": "This attribute is deprecated, please remove it from your configuration."
                },
                "startIp": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of tags (key/value). To remove all tags, set `tags = {}`.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale Zone name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Network resources.\n",
                "properties": {
                    "displayText": {
                        "type": "string",
                        "description": "A free-form text describing the network.\n"
                    },
                    "endIp": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The private network name.\n"
                    },
                    "netmask": {
                        "type": "string",
                        "description": "The network mask defining the IP network allowed for static leases (see `exoscale.NIC` resource). Required for *managed* private networks.\n* `start_ip`/`end_ip` - The first/last IP addresses used by the DHCP service for dynamic leases. Required for *managed* private networks.\n"
                    },
                    "networkOffering": {
                        "type": "string",
                        "deprecationMessage": "This attribute is deprecated, please remove it from your configuration."
                    },
                    "startIp": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of tags (key/value). To remove all tags, set `tags = {}`.\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The Exoscale Zone name.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/privateNetwork:PrivateNetwork": {
            "description": "\n\n\n## Import\n\nAn existing private network may be imported by `\u003cID\u003e@\u003czone\u003e`console\n\n```sh\n $ pulumi import exoscale:index/privateNetwork:PrivateNetwork \\\n```\n\n\n\n exoscale_private_network.my_private_network \\\n\n f81d4fae-7dec-11d0-a765-00a0c91e6bf6@ch-gva-2 ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the network.\n"
                },
                "endIp": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The private network name.\n"
                },
                "netmask": {
                    "type": "string",
                    "description": "The network mask defining the IPv4 network allowed for static leases.\n* `start_ip`/`end_ip` - (Required) The first/last IPv4 addresses used by the DHCP service for dynamic leases.\n"
                },
                "startIp": {
                    "type": "string"
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale [Zone][zone] name.\n"
                }
            },
            "required": [
                "name",
                "zone"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the network.\n"
                },
                "endIp": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The private network name.\n"
                },
                "netmask": {
                    "type": "string",
                    "description": "The network mask defining the IPv4 network allowed for static leases.\n* `start_ip`/`end_ip` - (Required) The first/last IPv4 addresses used by the DHCP service for dynamic leases.\n"
                },
                "startIp": {
                    "type": "string"
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale [Zone][zone] name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PrivateNetwork resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A free-form text describing the network.\n"
                    },
                    "endIp": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The private network name.\n"
                    },
                    "netmask": {
                        "type": "string",
                        "description": "The network mask defining the IPv4 network allowed for static leases.\n* `start_ip`/`end_ip` - (Required) The first/last IPv4 addresses used by the DHCP service for dynamic leases.\n"
                    },
                    "startIp": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The Exoscale [Zone][zone] name.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/sKSCluster:SKSCluster": {
            "description": "\n\n\n## Import\n\nAn existing SKS cluster may be imported by `\u003cID\u003e@\u003czone\u003e`console\n\n```sh\n $ pulumi import exoscale:index/sKSCluster:SKSCluster \\\n```\n\n\n\n exoscale_sks_cluster.my_sks_cluster \\\n\n f81d4fae-7dec-11d0-a765-00a0c91e6bf6@ch-gva-2 ",
            "properties": {
                "addons": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "This attribute has been replaced by `exoscale_ccm`/`metrics_server` attributes, it will be removed in a future release."
                },
                "aggregationCa": {
                    "type": "string",
                    "description": "The CA certificate (in PEM format) for TLS communications between the control plane and the aggregation layer (e.g. `metrics-server`).\n"
                },
                "autoUpgrade": {
                    "type": "boolean",
                    "description": "Enable automatic upgrading of the control plane version (boolean; default: `false`).\n"
                },
                "cni": {
                    "type": "string"
                },
                "controlPlaneCa": {
                    "type": "string",
                    "description": "The CA certificate (in PEM format) for TLS communications between control plane components.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The cluster creation date.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the cluster.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The cluster API endpoint.\n"
                },
                "exoscaleCcm": {
                    "type": "boolean",
                    "description": "Deploy the Exoscale [Cloud Controller Manager][ccm] in the control plane (boolean; default: `true`; may only be set at creation time).\n"
                },
                "kubeletCa": {
                    "type": "string",
                    "description": "The CA certificate (in PEM format) for TLS communications between kubelets and the control plane.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of key/value labels.\n"
                },
                "metricsServer": {
                    "type": "boolean",
                    "description": "Deploy the [Kubernetes Metrics Server][ms] in the control plane (boolean; default: `true`; may only be set at creation time).\n"
                },
                "name": {
                    "type": "string",
                    "description": "The SKS cluster name.\n"
                },
                "nodepools": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of exoscale.SKSNodepool (IDs) attached to the cluster.\n"
                },
                "oidc": {
                    "$ref": "#/types/exoscale:index/SKSClusterOidc:SKSClusterOidc",
                    "description": "An OpenID Connect configuration to provide to the Kubernetes API server (may only be set at creation time). Structure is documented below.\n"
                },
                "serviceLevel": {
                    "type": "string",
                    "description": "The service level of the control plane (`pro` or `starter`; default: `pro`; may only be set at creation time).\n"
                },
                "state": {
                    "type": "string",
                    "description": "The cluster state.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the control plane (default: latest version available from the API; see `exo compute sks versions` for reference; may only be set at creation time).\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale [Zone][zone] name.\n"
                }
            },
            "required": [
                "addons",
                "aggregationCa",
                "controlPlaneCa",
                "createdAt",
                "endpoint",
                "kubeletCa",
                "name",
                "nodepools",
                "oidc",
                "state",
                "version",
                "zone"
            ],
            "inputProperties": {
                "addons": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "This attribute has been replaced by `exoscale_ccm`/`metrics_server` attributes, it will be removed in a future release."
                },
                "autoUpgrade": {
                    "type": "boolean",
                    "description": "Enable automatic upgrading of the control plane version (boolean; default: `false`).\n"
                },
                "cni": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the cluster.\n"
                },
                "exoscaleCcm": {
                    "type": "boolean",
                    "description": "Deploy the Exoscale [Cloud Controller Manager][ccm] in the control plane (boolean; default: `true`; may only be set at creation time).\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of key/value labels.\n"
                },
                "metricsServer": {
                    "type": "boolean",
                    "description": "Deploy the [Kubernetes Metrics Server][ms] in the control plane (boolean; default: `true`; may only be set at creation time).\n"
                },
                "name": {
                    "type": "string",
                    "description": "The SKS cluster name.\n"
                },
                "oidc": {
                    "$ref": "#/types/exoscale:index/SKSClusterOidc:SKSClusterOidc",
                    "description": "An OpenID Connect configuration to provide to the Kubernetes API server (may only be set at creation time). Structure is documented below.\n"
                },
                "serviceLevel": {
                    "type": "string",
                    "description": "The service level of the control plane (`pro` or `starter`; default: `pro`; may only be set at creation time).\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the control plane (default: latest version available from the API; see `exo compute sks versions` for reference; may only be set at creation time).\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale [Zone][zone] name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SKSCluster resources.\n",
                "properties": {
                    "addons": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "deprecationMessage": "This attribute has been replaced by `exoscale_ccm`/`metrics_server` attributes, it will be removed in a future release."
                    },
                    "aggregationCa": {
                        "type": "string",
                        "description": "The CA certificate (in PEM format) for TLS communications between the control plane and the aggregation layer (e.g. `metrics-server`).\n"
                    },
                    "autoUpgrade": {
                        "type": "boolean",
                        "description": "Enable automatic upgrading of the control plane version (boolean; default: `false`).\n"
                    },
                    "cni": {
                        "type": "string"
                    },
                    "controlPlaneCa": {
                        "type": "string",
                        "description": "The CA certificate (in PEM format) for TLS communications between control plane components.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The cluster creation date.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free-form text describing the cluster.\n"
                    },
                    "endpoint": {
                        "type": "string",
                        "description": "The cluster API endpoint.\n"
                    },
                    "exoscaleCcm": {
                        "type": "boolean",
                        "description": "Deploy the Exoscale [Cloud Controller Manager][ccm] in the control plane (boolean; default: `true`; may only be set at creation time).\n"
                    },
                    "kubeletCa": {
                        "type": "string",
                        "description": "The CA certificate (in PEM format) for TLS communications between kubelets and the control plane.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of key/value labels.\n"
                    },
                    "metricsServer": {
                        "type": "boolean",
                        "description": "Deploy the [Kubernetes Metrics Server][ms] in the control plane (boolean; default: `true`; may only be set at creation time).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The SKS cluster name.\n"
                    },
                    "nodepools": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of exoscale.SKSNodepool (IDs) attached to the cluster.\n"
                    },
                    "oidc": {
                        "$ref": "#/types/exoscale:index/SKSClusterOidc:SKSClusterOidc",
                        "description": "An OpenID Connect configuration to provide to the Kubernetes API server (may only be set at creation time). Structure is documented below.\n"
                    },
                    "serviceLevel": {
                        "type": "string",
                        "description": "The service level of the control plane (`pro` or `starter`; default: `pro`; may only be set at creation time).\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The cluster state.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of the control plane (default: latest version available from the API; see `exo compute sks versions` for reference; may only be set at creation time).\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The Exoscale [Zone][zone] name.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/sKSKubeconfig:SKSKubeconfig": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "The parent exoscale.SKSCluster ID.\n"
                },
                "earlyRenewalSeconds": {
                    "type": "integer"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group names in the generated Kubeconfig. The certificate present in the Kubeconfig will have these roles set in the Organization field.\n"
                },
                "kubeconfig": {
                    "type": "string",
                    "description": "The generated Kubeconfig (YAML content).\n",
                    "secret": true
                },
                "readyForRenewal": {
                    "type": "boolean"
                },
                "ttlSeconds": {
                    "type": "number",
                    "description": "The Time-to-Live of the Kubeconfig, after which it will expire / become invalid (seconds; default: 2592000 = 30 days).\n"
                },
                "user": {
                    "type": "string",
                    "description": "User name in the generated Kubeconfig. The certificate present in the Kubeconfig will also have this name set for the CN field.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale [Zone][zone] name.\n"
                }
            },
            "required": [
                "clusterId",
                "groups",
                "kubeconfig",
                "readyForRenewal",
                "user",
                "zone"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "The parent exoscale.SKSCluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "earlyRenewalSeconds": {
                    "type": "integer"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group names in the generated Kubeconfig. The certificate present in the Kubeconfig will have these roles set in the Organization field.\n",
                    "willReplaceOnChanges": true
                },
                "ttlSeconds": {
                    "type": "number",
                    "description": "The Time-to-Live of the Kubeconfig, after which it will expire / become invalid (seconds; default: 2592000 = 30 days).\n",
                    "willReplaceOnChanges": true
                },
                "user": {
                    "type": "string",
                    "description": "User name in the generated Kubeconfig. The certificate present in the Kubeconfig will also have this name set for the CN field.\n",
                    "willReplaceOnChanges": true
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale [Zone][zone] name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "groups",
                "user",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SKSKubeconfig resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "The parent exoscale.SKSCluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "earlyRenewalSeconds": {
                        "type": "integer"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Group names in the generated Kubeconfig. The certificate present in the Kubeconfig will have these roles set in the Organization field.\n",
                        "willReplaceOnChanges": true
                    },
                    "kubeconfig": {
                        "type": "string",
                        "description": "The generated Kubeconfig (YAML content).\n",
                        "secret": true
                    },
                    "readyForRenewal": {
                        "type": "boolean"
                    },
                    "ttlSeconds": {
                        "type": "number",
                        "description": "The Time-to-Live of the Kubeconfig, after which it will expire / become invalid (seconds; default: 2592000 = 30 days).\n",
                        "willReplaceOnChanges": true
                    },
                    "user": {
                        "type": "string",
                        "description": "User name in the generated Kubeconfig. The certificate present in the Kubeconfig will also have this name set for the CN field.\n",
                        "willReplaceOnChanges": true
                    },
                    "zone": {
                        "type": "string",
                        "description": "The Exoscale [Zone][zone] name.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/sKSNodepool:SKSNodepool": {
            "description": "\n\n\n## Import\n\nAn existing SKS node pool may be imported by `\u003ccluster-ID\u003e/\u003cnodepool-ID\u003e@\u003czone\u003e`console\n\n```sh\n $ pulumi import exoscale:index/sKSNodepool:SKSNodepool \\\n```\n\n\n\n exoscale_sks_nodepool.my_sks_nodepool \\\n\n f81d4fae-7dec-11d0-a765-00a0c91e6bf6/9ecc6b8b-73d4-4211-8ced-f7f29bb79524@ch-gva-2 ",
            "properties": {
                "antiAffinityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of exoscale.AntiAffinityGroup (IDs) to be attached to the managed instances.\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The parent exoscale.SKSCluster ID.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The pool creation date.\n"
                },
                "deployTargetId": {
                    "type": "string",
                    "description": "A deploy target ID.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the pool.\n"
                },
                "diskSize": {
                    "type": "integer",
                    "description": "The managed instances disk size (GiB; default: `50`).\n"
                },
                "instancePoolId": {
                    "type": "string",
                    "description": "The underlying exoscale.InstancePool ID.\n"
                },
                "instancePrefix": {
                    "type": "string",
                    "description": "The string used to prefix the managed instances name (default `pool`).\n"
                },
                "instanceType": {
                    "type": "string",
                    "description": "The managed compute instances type (`\u003cfamily\u003e.\u003csize\u003e`, e.g. `standard.medium`; use the [Exoscale CLI][cli] - `exo compute instance-type list` - for the list of available types).\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of key/value labels.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The SKS node pool name.\n"
                },
                "privateNetworkIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of exoscale.PrivateNetwork (IDs) to be attached to the managed instances.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of exoscale.SecurityGroup (IDs) to be attached to the managed instances.\n"
                },
                "size": {
                    "type": "integer"
                },
                "state": {
                    "type": "string",
                    "description": "The current pool state.\n"
                },
                "taints": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of key/value Kubernetes [taints][taints] (`\u003cvalue\u003e:\u003ceffect\u003e`).\n"
                },
                "templateId": {
                    "type": "string",
                    "description": "The managed instances template ID.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The managed instances version.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale [Zone][zone] name.\n"
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "instancePoolId",
                "instanceType",
                "name",
                "size",
                "state",
                "templateId",
                "version",
                "zone"
            ],
            "inputProperties": {
                "antiAffinityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of exoscale.AntiAffinityGroup (IDs) to be attached to the managed instances.\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The parent exoscale.SKSCluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "deployTargetId": {
                    "type": "string",
                    "description": "A deploy target ID.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the pool.\n"
                },
                "diskSize": {
                    "type": "integer",
                    "description": "The managed instances disk size (GiB; default: `50`).\n"
                },
                "instancePrefix": {
                    "type": "string",
                    "description": "The string used to prefix the managed instances name (default `pool`).\n"
                },
                "instanceType": {
                    "type": "string",
                    "description": "The managed compute instances type (`\u003cfamily\u003e.\u003csize\u003e`, e.g. `standard.medium`; use the [Exoscale CLI][cli] - `exo compute instance-type list` - for the list of available types).\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of key/value labels.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The SKS node pool name.\n"
                },
                "privateNetworkIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of exoscale.PrivateNetwork (IDs) to be attached to the managed instances.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of exoscale.SecurityGroup (IDs) to be attached to the managed instances.\n"
                },
                "size": {
                    "type": "integer"
                },
                "taints": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of key/value Kubernetes [taints][taints] (`\u003cvalue\u003e:\u003ceffect\u003e`).\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The Exoscale [Zone][zone] name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "instanceType",
                "size",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SKSNodepool resources.\n",
                "properties": {
                    "antiAffinityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of exoscale.AntiAffinityGroup (IDs) to be attached to the managed instances.\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "The parent exoscale.SKSCluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The pool creation date.\n"
                    },
                    "deployTargetId": {
                        "type": "string",
                        "description": "A deploy target ID.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A free-form text describing the pool.\n"
                    },
                    "diskSize": {
                        "type": "integer",
                        "description": "The managed instances disk size (GiB; default: `50`).\n"
                    },
                    "instancePoolId": {
                        "type": "string",
                        "description": "The underlying exoscale.InstancePool ID.\n"
                    },
                    "instancePrefix": {
                        "type": "string",
                        "description": "The string used to prefix the managed instances name (default `pool`).\n"
                    },
                    "instanceType": {
                        "type": "string",
                        "description": "The managed compute instances type (`\u003cfamily\u003e.\u003csize\u003e`, e.g. `standard.medium`; use the [Exoscale CLI][cli] - `exo compute instance-type list` - for the list of available types).\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of key/value labels.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The SKS node pool name.\n"
                    },
                    "privateNetworkIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of exoscale.PrivateNetwork (IDs) to be attached to the managed instances.\n"
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of exoscale.SecurityGroup (IDs) to be attached to the managed instances.\n"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "state": {
                        "type": "string",
                        "description": "The current pool state.\n"
                    },
                    "taints": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of key/value Kubernetes [taints][taints] (`\u003cvalue\u003e:\u003ceffect\u003e`).\n"
                    },
                    "templateId": {
                        "type": "string",
                        "description": "The managed instances template ID.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "The managed instances version.\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The Exoscale [Zone][zone] name.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/sSHKey:SSHKey": {
            "description": "\n\n\n## Import\n\nAn existing SSH key may be imported as a resource by `\u003cname\u003e`console\n\n```sh\n $ pulumi import exoscale:index/sSHKey:SSHKey \\\n```\n\n\n\n exoscale_ssh_key.my_ssh_key \\\n\n my-ssh-key ",
            "properties": {
                "fingerprint": {
                    "type": "string",
                    "description": "The SSH key unique identifier.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The SSH key name.\n"
                },
                "publicKey": {
                    "type": "string",
                    "description": "The SSH *public* key that will be authorized in compute instances.\n"
                }
            },
            "required": [
                "fingerprint",
                "name",
                "publicKey"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The SSH key name.\n",
                    "willReplaceOnChanges": true
                },
                "publicKey": {
                    "type": "string",
                    "description": "The SSH *public* key that will be authorized in compute instances.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SSHKey resources.\n",
                "properties": {
                    "fingerprint": {
                        "type": "string",
                        "description": "The SSH key unique identifier.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The SSH key name.\n",
                        "willReplaceOnChanges": true
                    },
                    "publicKey": {
                        "type": "string",
                        "description": "The SSH *public* key that will be authorized in compute instances.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/sSHKeypair:SSHKeypair": {
            "properties": {
                "fingerprint": {
                    "type": "string",
                    "description": "The SSH keypair unique identifier.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The SSH keypair name.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "The SSH *private* key generated if no public key was provided.\n",
                    "secret": true
                },
                "publicKey": {
                    "type": "string",
                    "description": "A SSH *public* key that will be authorized in compute instances. If not provided, an SSH keypair (including the *private* key) is generated and saved locally (see the `private_key` attribute).\n"
                }
            },
            "required": [
                "fingerprint",
                "name",
                "privateKey"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The SSH keypair name.\n",
                    "willReplaceOnChanges": true
                },
                "publicKey": {
                    "type": "string",
                    "description": "A SSH *public* key that will be authorized in compute instances. If not provided, an SSH keypair (including the *private* key) is generated and saved locally (see the `private_key` attribute).\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SSHKeypair resources.\n",
                "properties": {
                    "fingerprint": {
                        "type": "string",
                        "description": "The SSH keypair unique identifier.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The SSH keypair name.\n",
                        "willReplaceOnChanges": true
                    },
                    "privateKey": {
                        "type": "string",
                        "description": "The SSH *private* key generated if no public key was provided.\n",
                        "secret": true
                    },
                    "publicKey": {
                        "type": "string",
                        "description": "A SSH *public* key that will be authorized in compute instances. If not provided, an SSH keypair (including the *private* key) is generated and saved locally (see the `private_key` attribute).\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/secondaryIPAddress:SecondaryIPAddress": {
            "description": "!\u003e **WARNING:** This resource is **DEPRECATED** and will be removed in the next major version. Please use exoscale.ComputeInstance `elastic_ip_ids` list instead.\n",
            "properties": {
                "computeId": {
                    "type": "string",
                    "description": "The compute instance ID.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The Elastic IP (EIP) address.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The network (ID) the compute instance NIC is attached to.\n"
                },
                "nicId": {
                    "type": "string",
                    "description": "The network interface (NIC) ID.\n"
                }
            },
            "required": [
                "computeId",
                "ipAddress",
                "networkId",
                "nicId"
            ],
            "inputProperties": {
                "computeId": {
                    "type": "string",
                    "description": "The compute instance ID.\n",
                    "willReplaceOnChanges": true
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The Elastic IP (EIP) address.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "computeId",
                "ipAddress"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SecondaryIPAddress resources.\n",
                "properties": {
                    "computeId": {
                        "type": "string",
                        "description": "The compute instance ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "The Elastic IP (EIP) address.\n",
                        "willReplaceOnChanges": true
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The network (ID) the compute instance NIC is attached to.\n"
                    },
                    "nicId": {
                        "type": "string",
                        "description": "The network interface (NIC) ID.\n"
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/securityGroup:SecurityGroup": {
            "description": "\n\n\n## Import\n\nAn existing security group may be imported by `\u003cID\u003e`console\n\n```sh\n $ pulumi import exoscale:index/securityGroup:SecurityGroup \\\n```\n\n\n\n exoscale_security_group.my_security_group \\\n\n f81d4fae-7dec-11d0-a765-00a0c91e6bf6 ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the group.\n"
                },
                "externalSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of external network sources, in [CIDR][cidr] notation.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The security group name.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the group.\n",
                    "willReplaceOnChanges": true
                },
                "externalSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of external network sources, in [CIDR][cidr] notation.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The security group name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SecurityGroup resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A free-form text describing the group.\n",
                        "willReplaceOnChanges": true
                    },
                    "externalSources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of external network sources, in [CIDR][cidr] notation.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The security group name.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/securityGroupRule:SecurityGroupRule": {
            "description": "Manage Exoscale [Security Group](https://community.exoscale.com/documentation/compute/security-groups/) Rules.\n\n\n## Usage\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as exoscale from \"@pulumiverse/exoscale\";\n\nconst mySecurityGroup = new exoscale.SecurityGroup(\"mySecurityGroup\", {});\nconst mySecurityGroupRule = new exoscale.SecurityGroupRule(\"mySecurityGroupRule\", {\n    securityGroupId: mySecurityGroup.id,\n    type: \"INGRESS\",\n    protocol: \"TCP\",\n    cidr: \"0.0.0.0/0\",\n    startPort: 80,\n    endPort: 80,\n});\n```\n```python\nimport pulumi\nimport pulumiverse_exoscale as exoscale\n\nmy_security_group = exoscale.SecurityGroup(\"mySecurityGroup\")\nmy_security_group_rule = exoscale.SecurityGroupRule(\"mySecurityGroupRule\",\n    security_group_id=my_security_group.id,\n    type=\"INGRESS\",\n    protocol=\"TCP\",\n    cidr=\"0.0.0.0/0\",\n    start_port=80,\n    end_port=80)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Exoscale = Pulumiverse.Exoscale;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mySecurityGroup = new Exoscale.SecurityGroup(\"mySecurityGroup\");\n\n    var mySecurityGroupRule = new Exoscale.SecurityGroupRule(\"mySecurityGroupRule\", new()\n    {\n        SecurityGroupId = mySecurityGroup.Id,\n        Type = \"INGRESS\",\n        Protocol = \"TCP\",\n        Cidr = \"0.0.0.0/0\",\n        StartPort = 80,\n        EndPort = 80,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-exoscale/sdk/go/exoscale\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmySecurityGroup, err := exoscale.NewSecurityGroup(ctx, \"mySecurityGroup\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = exoscale.NewSecurityGroupRule(ctx, \"mySecurityGroupRule\", \u0026exoscale.SecurityGroupRuleArgs{\n\t\t\tSecurityGroupId: mySecurityGroup.ID(),\n\t\t\tType:            pulumi.String(\"INGRESS\"),\n\t\t\tProtocol:        pulumi.String(\"TCP\"),\n\t\t\tCidr:            pulumi.String(\"0.0.0.0/0\"),\n\t\t\tStartPort:       pulumi.Int(80),\n\t\t\tEndPort:         pulumi.Int(80),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.exoscale.SecurityGroup;\nimport com.pulumi.exoscale.SecurityGroupRule;\nimport com.pulumi.exoscale.SecurityGroupRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mySecurityGroup = new SecurityGroup(\"mySecurityGroup\");\n\n        var mySecurityGroupRule = new SecurityGroupRule(\"mySecurityGroupRule\", SecurityGroupRuleArgs.builder()        \n            .securityGroupId(mySecurityGroup.id())\n            .type(\"INGRESS\")\n            .protocol(\"TCP\")\n            .cidr(\"0.0.0.0/0\")\n            .startPort(80)\n            .endPort(80)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mySecurityGroup:\n    type: exoscale:SecurityGroup\n  mySecurityGroupRule:\n    type: exoscale:SecurityGroupRule\n    properties:\n      securityGroupId: ${mySecurityGroup.id}\n      type: INGRESS\n      protocol: TCP\n      cidr: 0.0.0.0/0\n      # \"::/0\" for IPv6\n      startPort: 80\n      endPort: 80\n```\n\n\n## Import\n\nAn existing security group rule may be imported by `\u003csecurity-group-ID\u003e/\u003csecurity-group-rule-ID\u003e`console\n\n```sh\n $ pulumi import exoscale:index/securityGroupRule:SecurityGroupRule \\\n```\n\n\n\n exoscale_security_group_rule.my_security_group_rule \\\n\n f81d4fae-7dec-11d0-a765-00a0c91e6bf6/9ecc6b8b-73d4-4211-8ced-f7f29bb79524 ",
            "properties": {
                "cidr": {
                    "type": "string",
                    "description": "An (`INGRESS`) source / (`EGRESS`) destination IP subnet (in [CIDR notation][cidr]) to match (conflicts with `user_security_group`/`user_security_group_id`).\n* `start_port`/`end_port` - A `TCP`/`UDP` port range to match.\n* `icmp_type`/`icmp_code` - An ICMP/ICMPv6 [type/code][icmp] to match.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the security group rule.\n"
                },
                "endPort": {
                    "type": "integer"
                },
                "icmpCode": {
                    "type": "integer"
                },
                "icmpType": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string",
                    "description": "The network protocol to match (`TCP`, `UDP`, `ICMP`, `ICMPv6`, `AH`, `ESP`, `GRE`, `IPIP` or `ALL`)\n"
                },
                "securityGroup": {
                    "type": "string",
                    "description": "The parent security group name. Please use the `security_group_id` argument along the exoscale.SecurityGroup data source instead.\n"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "The parent exoscale.SecurityGroup ID.\n"
                },
                "startPort": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "description": "The traffic direction to match (`INGRESS` or `EGRESS`).\n"
                },
                "userSecurityGroup": {
                    "type": "string",
                    "description": "An (`INGRESS`) source / (`EGRESS`) destination security group name to match (conflicts with `cidr`/`user_security_group_id`). Please use the `user_security_group_id` argument along the exoscale.SecurityGroup data source instead.\n"
                },
                "userSecurityGroupId": {
                    "type": "string",
                    "description": "An (`INGRESS`) source / (`EGRESS`) destination security group ID to match (conflicts with `cidr`/`user_security_group)`).\n"
                }
            },
            "required": [
                "securityGroup",
                "securityGroupId",
                "type",
                "userSecurityGroup"
            ],
            "inputProperties": {
                "cidr": {
                    "type": "string",
                    "description": "An (`INGRESS`) source / (`EGRESS`) destination IP subnet (in [CIDR notation][cidr]) to match (conflicts with `user_security_group`/`user_security_group_id`).\n* `start_port`/`end_port` - A `TCP`/`UDP` port range to match.\n* `icmp_type`/`icmp_code` - An ICMP/ICMPv6 [type/code][icmp] to match.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "A free-form text describing the security group rule.\n",
                    "willReplaceOnChanges": true
                },
                "endPort": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "icmpCode": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "icmpType": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "protocol": {
                    "type": "string",
                    "description": "The network protocol to match (`TCP`, `UDP`, `ICMP`, `ICMPv6`, `AH`, `ESP`, `GRE`, `IPIP` or `ALL`)\n",
                    "willReplaceOnChanges": true
                },
                "securityGroup": {
                    "type": "string",
                    "description": "The parent security group name. Please use the `security_group_id` argument along the exoscale.SecurityGroup data source instead.\n",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "The parent exoscale.SecurityGroup ID.\n",
                    "willReplaceOnChanges": true
                },
                "startPort": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The traffic direction to match (`INGRESS` or `EGRESS`).\n",
                    "willReplaceOnChanges": true
                },
                "userSecurityGroup": {
                    "type": "string",
                    "description": "An (`INGRESS`) source / (`EGRESS`) destination security group name to match (conflicts with `cidr`/`user_security_group_id`). Please use the `user_security_group_id` argument along the exoscale.SecurityGroup data source instead.\n",
                    "willReplaceOnChanges": true
                },
                "userSecurityGroupId": {
                    "type": "string",
                    "description": "An (`INGRESS`) source / (`EGRESS`) destination security group ID to match (conflicts with `cidr`/`user_security_group)`).\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SecurityGroupRule resources.\n",
                "properties": {
                    "cidr": {
                        "type": "string",
                        "description": "An (`INGRESS`) source / (`EGRESS`) destination IP subnet (in [CIDR notation][cidr]) to match (conflicts with `user_security_group`/`user_security_group_id`).\n* `start_port`/`end_port` - A `TCP`/`UDP` port range to match.\n* `icmp_type`/`icmp_code` - An ICMP/ICMPv6 [type/code][icmp] to match.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "A free-form text describing the security group rule.\n",
                        "willReplaceOnChanges": true
                    },
                    "endPort": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "icmpCode": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "icmpType": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "protocol": {
                        "type": "string",
                        "description": "The network protocol to match (`TCP`, `UDP`, `ICMP`, `ICMPv6`, `AH`, `ESP`, `GRE`, `IPIP` or `ALL`)\n",
                        "willReplaceOnChanges": true
                    },
                    "securityGroup": {
                        "type": "string",
                        "description": "The parent security group name. Please use the `security_group_id` argument along the exoscale.SecurityGroup data source instead.\n",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string",
                        "description": "The parent exoscale.SecurityGroup ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "startPort": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The traffic direction to match (`INGRESS` or `EGRESS`).\n",
                        "willReplaceOnChanges": true
                    },
                    "userSecurityGroup": {
                        "type": "string",
                        "description": "An (`INGRESS`) source / (`EGRESS`) destination security group name to match (conflicts with `cidr`/`user_security_group_id`). Please use the `user_security_group_id` argument along the exoscale.SecurityGroup data source instead.\n",
                        "willReplaceOnChanges": true
                    },
                    "userSecurityGroupId": {
                        "type": "string",
                        "description": "An (`INGRESS`) source / (`EGRESS`) destination security group ID to match (conflicts with `cidr`/`user_security_group)`).\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/securityGroupRules:SecurityGroupRules": {
            "description": "!\u003e **WARNING:** This resource is **DEPRECATED** and will be removed in the next major version. Please use the exoscale.SecurityGroupRule instead (or refer to the ad-hoc migration guide).\n",
            "properties": {
                "egresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/exoscale:index/SecurityGroupRulesEgress:SecurityGroupRulesEgress"
                    }
                },
                "ingresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/exoscale:index/SecurityGroupRulesIngress:SecurityGroupRulesIngress"
                    }
                },
                "securityGroup": {
                    "type": "string",
                    "description": "The security group (name) the rules apply to (conflicts with `security_group_id`).\n"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "The security group (ID) the rules apply to (conficts with `security_group)`.\n"
                }
            },
            "required": [
                "securityGroup",
                "securityGroupId"
            ],
            "inputProperties": {
                "egresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/exoscale:index/SecurityGroupRulesEgress:SecurityGroupRulesEgress"
                    }
                },
                "ingresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/exoscale:index/SecurityGroupRulesIngress:SecurityGroupRulesIngress"
                    }
                },
                "securityGroup": {
                    "type": "string",
                    "description": "The security group (name) the rules apply to (conflicts with `security_group_id`).\n",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "The security group (ID) the rules apply to (conficts with `security_group)`.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SecurityGroupRules resources.\n",
                "properties": {
                    "egresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/exoscale:index/SecurityGroupRulesEgress:SecurityGroupRulesEgress"
                        }
                    },
                    "ingresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/exoscale:index/SecurityGroupRulesIngress:SecurityGroupRulesIngress"
                        }
                    },
                    "securityGroup": {
                        "type": "string",
                        "description": "The security group (name) the rules apply to (conflicts with `security_group_id`).\n",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string",
                        "description": "The security group (ID) the rules apply to (conficts with `security_group)`.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "exoscale:index/getAffinity:getAffinity": {
            "description": "!\u003e **WARNING:** This data source is DEPRECATED and will be removed in the next major version. Please use exoscale.AntiAffinityGroup instead.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAffinity.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The anti-affinity group ID to match (conflicts with `name`)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The group name to match (conflicts with `id`)\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAffinity.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "exoscale:index/getAntiAffinityGroup:getAntiAffinityGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getAntiAffinityGroup.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The anti-affinity group ID to match (conflicts with `name`).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The group name to match (conflicts with `id`).\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAntiAffinityGroup.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "instances": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of attached exoscale.ComputeInstance (IDs).\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instances"
                ]
            }
        },
        "exoscale:index/getCompute:getCompute": {
            "description": "!\u003e **WARNING:** This data source is **DEPRECATED** and will be removed in the next major version. Please use exoscale.ComputeInstance instead.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCompute.\n",
                "properties": {
                    "hostname": {
                        "type": "string",
                        "description": "The instance hostname to match.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The compute instance ID to match.\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The instance tags to match (map of key/value).\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCompute.\n",
                "properties": {
                    "cpu": {
                        "type": "integer",
                        "description": "The compute instance number of CPUs.\n"
                    },
                    "created": {
                        "type": "string",
                        "description": "The instance creation date.\n"
                    },
                    "diskSize": {
                        "type": "integer",
                        "description": "The instance disk size (GiB).\n"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ip6Address": {
                        "type": "string",
                        "description": "The instance (main network interface) IPv6 address (if enabled).\n"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "The instance (main network interface) IPv4 address.\n"
                    },
                    "memory": {
                        "type": "integer",
                        "description": "The instance allocated memory.\n"
                    },
                    "privateNetworkIpAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of compute private IPv4 addresses (in *managed* private networks only).\n"
                    },
                    "size": {
                        "type": "string",
                        "description": "The instance size.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The current instance state.\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "template": {
                        "type": "string",
                        "description": "The instance template.\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "Exoscale Zone name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cpu",
                    "created",
                    "diskSize",
                    "ip6Address",
                    "ipAddress",
                    "memory",
                    "privateNetworkIpAddresses",
                    "size",
                    "state",
                    "template",
                    "zone"
                ]
            }
        },
        "exoscale:index/getComputeIPAddress:getComputeIPAddress": {
            "description": "!\u003e **WARNING:** This data source is **DEPRECATED** and will be removed in the next major version. Please use exoscale.ElasticIP instead.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getComputeIPAddress.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The EIP description to match.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The Elastic IP (EIP) ID to match.\n"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "The EIP IPv4 address to match.\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The EIP tags to match.\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The Exoscale Zone name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "zone"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getComputeIPAddress.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipAddress": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "zone"
                ]
            }
        },
        "exoscale:index/getComputeInstance:getComputeInstance": {
            "inputs": {
                "description": "A collection of arguments for invoking getComputeInstance.\n",
                "properties": {
                    "antiAffinityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The compute instance ID to match (conflicts with `name`).\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of key/value labels.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The instance name to match (conflicts with `id`).\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The Exoscale [Zone][zone] name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "zone"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getComputeInstance.\n",
                "properties": {
                    "antiAffinityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The compute instance creation date.\n"
                    },
                    "deployTargetId": {
                        "type": "string",
                        "description": "A deploy target ID.\n"
                    },
                    "diskSize": {
                        "type": "integer",
                        "description": "The instance disk size (GiB).\n"
                    },
                    "elasticIpIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of attached exoscale.ElasticIP (IDs).\n"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipv6": {
                        "type": "boolean",
                        "description": "Whether IPv6 is enabled on the instance.\n"
                    },
                    "ipv6Address": {
                        "type": "string",
                        "description": "The instance (main network interface) IPv6 address (if enabled).\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of key/value labels.\n"
                    },
                    "managerId": {
                        "type": "string",
                        "description": "The instance manager ID, if any.\n"
                    },
                    "managerType": {
                        "type": "string",
                        "description": "The instance manager type (instance pool, SKS node pool, etc.), if any.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "privateNetworkIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "publicIpAddress": {
                        "type": "string",
                        "description": "The instance (main network interface) IPv4 address.\n"
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of attached exoscale.SecurityGroup (IDs).\n"
                    },
                    "sshKey": {
                        "type": "string",
                        "description": "The exoscale.SSHKey (name) authorized on the instance.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The instance state.\n"
                    },
                    "templateId": {
                        "type": "string",
                        "description": "The instance exoscale.getComputeTemplate ID.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The instance type.\n"
                    },
                    "userData": {
                        "type": "string",
                        "description": "The instance [cloud-init][cloud-init] configuration.\n"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "deployTargetId",
                    "diskSize",
                    "elasticIpIds",
                    "ipv6",
                    "ipv6Address",
                    "managerId",
                    "managerType",
                    "privateNetworkIds",
                    "publicIpAddress",
                    "securityGroupIds",
                    "sshKey",
                    "state",
                    "templateId",
                    "type",
                    "userData",
                    "zone"
                ]
            }
        },
        "exoscale:index/getComputeInstanceList:getComputeInstanceList": {
            "inputs": {
                "description": "A collection of arguments for invoking getComputeInstanceList.\n",
                "properties": {
                    "zone": {
                        "type": "string",
                        "description": "The Exoscale [Zone][zone] name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "zone"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getComputeInstanceList.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "instances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/exoscale:index/getComputeInstanceListInstance:getComputeInstanceListInstance"
                        }
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instances",
                    "zone",
                    "id"
                ]
            }
        },
        "exoscale:index/getComputeTemplate:getComputeTemplate": {
            "inputs": {
                "description": "A collection of arguments for invoking getComputeTemplate.\n",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "A template category filter (default: `featured`); among:\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The compute instance template ID to match (conflicts with `name`).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The template name to match (conflicts with `id`).\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The Exoscale [Zone][zone] name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "zone"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getComputeTemplate.\n",
                "properties": {
                    "filter": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username to use to log into a compute instance based on this template\n"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "username",
                    "zone"
                ]
            }
        },
        "exoscale:index/getDomain:getDomain": {
            "inputs": {
                "description": "A collection of arguments for invoking getDomain.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The DNS domain name to match.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDomain.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "exoscale:index/getDomainRecord:getDomainRecord": {
            "inputs": {
                "description": "A collection of arguments for invoking getDomainRecord.\n",
                "properties": {
                    "domain": {
                        "type": "string",
                        "description": "The exoscale.Domain name to match.\n"
                    },
                    "filter": {
                        "$ref": "#/types/exoscale:index/getDomainRecordFilter:getDomainRecordFilter",
                        "description": "Filter to apply when looking up domain records. Structure is documented below.\n"
                    }
                },
                "type": "object",
                "required": [
                    "domain",
                    "filter"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDomainRecord.\n",
                "properties": {
                    "domain": {
                        "type": "string"
                    },
                    "filter": {
                        "$ref": "#/types/exoscale:index/getDomainRecordFilter:getDomainRecordFilter"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/exoscale:index/getDomainRecordRecord:getDomainRecordRecord"
                        },
                        "description": "The list of matching records. Structure is documented below.\n"
                    }
                },
                "type": "object",
                "required": [
                    "domain",
                    "filter",
                    "records",
                    "id"
                ]
            }
        },
        "exoscale:index/getElasticIP:getElasticIP": {
            "inputs": {
                "description": "A collection of arguments for invoking getElasticIP.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The Elastic IP (EIP) ID to match (conflicts with `ip_address`).\n"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "The EIP IPv4 or IPv6 address to match (conflicts with `id`).\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The Exocale [Zone][zone] name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "zone"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getElasticIP.\n",
                "properties": {
                    "addressFamily": {
                        "type": "string",
                        "description": "The Elastic IP (EIP) address family (`inet4` or `inet6`).\n"
                    },
                    "cidr": {
                        "type": "string",
                        "description": "The Elastic IP (EIP) CIDR.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The Elastic IP (EIP) description.\n"
                    },
                    "healthchecks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/exoscale:index/getElasticIPHealthcheck:getElasticIPHealthcheck"
                        },
                        "description": "(Block) The *managed* EIP healthcheck configuration. Structure is documented below.\n"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipAddress": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamily",
                    "cidr",
                    "description",
                    "healthchecks",
                    "zone"
                ]
            }
        },
        "exoscale:index/getInstancePool:getInstancePool": {
            "inputs": {
                "description": "A collection of arguments for invoking getInstancePool.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The instance pool ID to match (conflicts with `name`).\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of key/value labels.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The pool name to match (conflicts with `id`).\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The Exoscale [Zone][zone] name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "zone"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInstancePool.\n",
                "properties": {
                    "affinityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of attached exoscale.AntiAffinityGroup (IDs).\n"
                    },
                    "deployTargetId": {
                        "type": "string",
                        "description": "The deploy target ID.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The instance pool description.\n"
                    },
                    "diskSize": {
                        "type": "integer",
                        "description": "The managed instances disk size.\n"
                    },
                    "elasticIpIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of attached exoscale.ElasticIP (IDs).\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The compute instance ID.\n"
                    },
                    "instancePrefix": {
                        "type": "string",
                        "description": "The string used to prefix the managed instances name.\n"
                    },
                    "instanceType": {
                        "type": "string",
                        "description": "The managed instances type.\n"
                    },
                    "instances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/exoscale:index/getInstancePoolInstance:getInstancePoolInstance"
                        },
                        "description": "The list of managed instances. Structure is documented below.\n"
                    },
                    "ipv6": {
                        "type": "boolean",
                        "description": "Whether IPv6 is enabled on managed instances.\n"
                    },
                    "keyPair": {
                        "type": "string",
                        "description": "The exoscale.SSHKey (name) authorized on the managed instances.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of key/value labels.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The instance name.\n"
                    },
                    "networkIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of attached exoscale.PrivateNetwork (IDs).\n"
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of attached exoscale.SecurityGroup (IDs).\n"
                    },
                    "size": {
                        "type": "integer",
                        "description": "The number managed instances.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The pool state.\n"
                    },
                    "templateId": {
                        "type": "string",
                        "description": "The managed instances exoscale.getComputeTemplate ID.\n"
                    },
                    "userData": {
                        "type": "string",
                        "description": "[cloud-init][cloud-init] configuration.\n"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "affinityGroupIds",
                    "deployTargetId",
                    "description",
                    "diskSize",
                    "elasticIpIds",
                    "instancePrefix",
                    "instanceType",
                    "instances",
                    "ipv6",
                    "keyPair",
                    "networkIds",
                    "securityGroupIds",
                    "size",
                    "state",
                    "templateId",
                    "userData",
                    "zone"
                ]
            }
        },
        "exoscale:index/getInstancePoolList:getInstancePoolList": {
            "inputs": {
                "description": "A collection of arguments for invoking getInstancePoolList.\n",
                "properties": {
                    "zone": {
                        "type": "string",
                        "description": "The Exoscale [Zone][zone] name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "zone"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInstancePoolList.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "pools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/exoscale:index/getInstancePoolListPool:getInstancePoolListPool"
                        },
                        "description": "The list of exoscale_instance_pool.\n"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "pools",
                    "zone",
                    "id"
                ]
            }
        },
        "exoscale:index/getNLB:getNLB": {
            "inputs": {
                "description": "A collection of arguments for invoking getNLB.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The Network Load Balancers (NLB) ID to match (conflicts with `name`).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The NLB name to match (conflicts with `id`).\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The Exoscale [Zone][zone] name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "zone"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNLB.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The NLB creation date.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The Network Load Balancers (NLB) description.\n"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "The NLB public IPv4 address.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string",
                        "description": "The current NLB state.\n"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "description",
                    "ipAddress",
                    "state",
                    "zone"
                ]
            }
        },
        "exoscale:index/getNetwork:getNetwork": {
            "description": "!\u003e **WARNING:** This data source is **DEPRECATED** and will be removed in the next major version. Please use exoscale.PrivateNetwork instead.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getNetwork.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The private network ID to match (conflicts with `name`).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The network name to match (conflicts with `id`).\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The Exoscale Zone name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "zone"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNetwork.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The private network description.\n"
                    },
                    "endIp": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "netmask": {
                        "type": "string",
                        "description": "The network mask defining the IPv4 network allowed for static leases.\n* `start_ip`/`end_ip` - The first/last IPv4 addresses used by the DHCP service for dynamic leases.\n"
                    },
                    "startIp": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "endIp",
                    "netmask",
                    "startIp",
                    "zone"
                ]
            }
        },
        "exoscale:index/getPrivateNetwork:getPrivateNetwork": {
            "inputs": {
                "description": "A collection of arguments for invoking getPrivateNetwork.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The private network description.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The private network ID to match (conflicts with `name`).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The network name to match (conflicts with `id`).\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The Exoscale [Zone][zone] name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "zone"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPrivateNetwork.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The private network description.\n"
                    },
                    "endIp": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "netmask": {
                        "type": "string",
                        "description": "The network mask defining the IPv4 network allowed for static leases.\n* `start_ip`/`end_ip` - The first/last IPv4 addresses used by the DHCP service for dynamic leases.\n"
                    },
                    "startIp": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "endIp",
                    "netmask",
                    "startIp",
                    "zone"
                ]
            }
        },
        "exoscale:index/getSecurityGroup:getSecurityGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getSecurityGroup.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The security group ID to match (conflicts with `name`)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name to match (conflicts with `id`)\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSecurityGroup.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    }
}