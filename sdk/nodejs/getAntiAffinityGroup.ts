// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAntiAffinityGroup(args?: GetAntiAffinityGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetAntiAffinityGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("exoscale:index/getAntiAffinityGroup:getAntiAffinityGroup", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getAntiAffinityGroup.
 */
export interface GetAntiAffinityGroupArgs {
    /**
     * The anti-affinity group ID to match (conflicts with `name`).
     */
    id?: string;
    /**
     * The group name to match (conflicts with `id`).
     */
    name?: string;
}

/**
 * A collection of values returned by getAntiAffinityGroup.
 */
export interface GetAntiAffinityGroupResult {
    readonly id?: string;
    /**
     * The list of attached exoscale.ComputeInstance (IDs).
     */
    readonly instances: string[];
    readonly name?: string;
}

export function getAntiAffinityGroupOutput(args?: GetAntiAffinityGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAntiAffinityGroupResult> {
    return pulumi.output(args).apply(a => getAntiAffinityGroup(a, opts))
}

/**
 * A collection of arguments for invoking getAntiAffinityGroup.
 */
export interface GetAntiAffinityGroupOutputArgs {
    /**
     * The anti-affinity group ID to match (conflicts with `name`).
     */
    id?: pulumi.Input<string>;
    /**
     * The group name to match (conflicts with `id`).
     */
    name?: pulumi.Input<string>;
}
