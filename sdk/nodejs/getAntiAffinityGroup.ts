// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Fetch Exoscale [Anti-Affinity Groups](https://community.exoscale.com/documentation/compute/anti-affinity-groups/) data.
 *
 * Corresponding resource: exoscale_anti_affinity_group.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as exoscale from "@pulumi/exoscale";
 *
 * const myAntiAffinityGroup = exoscale.getAntiAffinityGroup({
 *     name: "my-anti-affinity-group",
 * });
 * export const myAntiAffinityGroupId = myAntiAffinityGroup.then(myAntiAffinityGroup => myAntiAffinityGroup.id);
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * Please refer to the examples
 * directory for complete configuration examples.
 */
export function getAntiAffinityGroup(args?: GetAntiAffinityGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetAntiAffinityGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("exoscale:index/getAntiAffinityGroup:getAntiAffinityGroup", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getAntiAffinityGroup.
 */
export interface GetAntiAffinityGroupArgs {
    /**
     * The anti-affinity group ID to match (conflicts with `name`).
     */
    id?: string;
    /**
     * The group name to match (conflicts with `id`).
     */
    name?: string;
}

/**
 * A collection of values returned by getAntiAffinityGroup.
 */
export interface GetAntiAffinityGroupResult {
    /**
     * The anti-affinity group ID to match (conflicts with `name`).
     */
    readonly id?: string;
    /**
     * The list of attached exoscale*compute*instance (IDs).
     */
    readonly instances: string[];
    /**
     * The group name to match (conflicts with `id`).
     */
    readonly name?: string;
}
/**
 * Fetch Exoscale [Anti-Affinity Groups](https://community.exoscale.com/documentation/compute/anti-affinity-groups/) data.
 *
 * Corresponding resource: exoscale_anti_affinity_group.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as exoscale from "@pulumi/exoscale";
 *
 * const myAntiAffinityGroup = exoscale.getAntiAffinityGroup({
 *     name: "my-anti-affinity-group",
 * });
 * export const myAntiAffinityGroupId = myAntiAffinityGroup.then(myAntiAffinityGroup => myAntiAffinityGroup.id);
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * Please refer to the examples
 * directory for complete configuration examples.
 */
export function getAntiAffinityGroupOutput(args?: GetAntiAffinityGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAntiAffinityGroupResult> {
    return pulumi.output(args).apply((a: any) => getAntiAffinityGroup(a, opts))
}

/**
 * A collection of arguments for invoking getAntiAffinityGroup.
 */
export interface GetAntiAffinityGroupOutputArgs {
    /**
     * The anti-affinity group ID to match (conflicts with `name`).
     */
    id?: pulumi.Input<string>;
    /**
     * The group name to match (conflicts with `id`).
     */
    name?: pulumi.Input<string>;
}
