// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSksNodepoolList(args: GetSksNodepoolListArgs, opts?: pulumi.InvokeOptions): Promise<GetSksNodepoolListResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("exoscale:index/getSksNodepoolList:getSksNodepoolList", {
        "clusterId": args.clusterId,
        "createdAt": args.createdAt,
        "deployTargetId": args.deployTargetId,
        "description": args.description,
        "diskSize": args.diskSize,
        "id": args.id,
        "instancePoolId": args.instancePoolId,
        "instancePrefix": args.instancePrefix,
        "instanceType": args.instanceType,
        "labels": args.labels,
        "name": args.name,
        "size": args.size,
        "state": args.state,
        "storageLvm": args.storageLvm,
        "taints": args.taints,
        "templateId": args.templateId,
        "version": args.version,
        "zone": args.zone,
    }, opts);
}

/**
 * A collection of arguments for invoking getSksNodepoolList.
 */
export interface GetSksNodepoolListArgs {
    clusterId?: string;
    createdAt?: string;
    deployTargetId?: string;
    description?: string;
    diskSize?: number;
    id?: string;
    instancePoolId?: string;
    instancePrefix?: string;
    instanceType?: string;
    labels?: {[key: string]: string};
    name?: string;
    size?: number;
    state?: string;
    storageLvm?: boolean;
    taints?: {[key: string]: string};
    templateId?: string;
    version?: string;
    zone: string;
}

/**
 * A collection of values returned by getSksNodepoolList.
 */
export interface GetSksNodepoolListResult {
    /**
     * Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
     */
    readonly clusterId?: string;
    /**
     * Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
     */
    readonly createdAt?: string;
    /**
     * Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
     */
    readonly deployTargetId?: string;
    /**
     * Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
     */
    readonly description?: string;
    /**
     * Match against this int
     */
    readonly diskSize?: number;
    /**
     * Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
     */
    readonly id?: string;
    /**
     * Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
     */
    readonly instancePoolId?: string;
    /**
     * Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
     */
    readonly instancePrefix?: string;
    /**
     * Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
     */
    readonly instanceType?: string;
    /**
     * Match against key/values. Keys are matched exactly, while values may be matched as a regex if you supply a string that begins and ends with "/"
     */
    readonly labels?: {[key: string]: string};
    /**
     * Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
     */
    readonly name?: string;
    readonly nodepools: outputs.GetSksNodepoolListNodepool[];
    /**
     * Match against this int
     */
    readonly size?: number;
    /**
     * Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
     */
    readonly state?: string;
    /**
     * Match against this bool
     */
    readonly storageLvm?: boolean;
    /**
     * Match against key/values. Keys are matched exactly, while values may be matched as a regex if you supply a string that begins and ends with "/"
     */
    readonly taints?: {[key: string]: string};
    /**
     * Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
     */
    readonly templateId?: string;
    /**
     * Match against this string. If you supply a string that begins and ends with a "/" it will be matched as a regex.
     */
    readonly version?: string;
    /**
     * The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
     */
    readonly zone: string;
}
export function getSksNodepoolListOutput(args: GetSksNodepoolListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSksNodepoolListResult> {
    return pulumi.output(args).apply((a: any) => getSksNodepoolList(a, opts))
}

/**
 * A collection of arguments for invoking getSksNodepoolList.
 */
export interface GetSksNodepoolListOutputArgs {
    clusterId?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    deployTargetId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    diskSize?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    instancePoolId?: pulumi.Input<string>;
    instancePrefix?: pulumi.Input<string>;
    instanceType?: pulumi.Input<string>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name?: pulumi.Input<string>;
    size?: pulumi.Input<number>;
    state?: pulumi.Input<string>;
    storageLvm?: pulumi.Input<boolean>;
    taints?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    templateId?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
    zone: pulumi.Input<string>;
}
