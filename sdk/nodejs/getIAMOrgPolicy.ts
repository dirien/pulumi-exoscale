// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Fetch Exoscale [IAM](https://community.exoscale.com/documentation/iam/) Organization Policy.
 *
 * Corresponding resource: exoscale_iam_org_policy.
 */
export function getIAMOrgPolicy(args?: GetIAMOrgPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetIAMOrgPolicyResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("exoscale:index/getIAMOrgPolicy:getIAMOrgPolicy", {
        "timeouts": args.timeouts,
    }, opts);
}

/**
 * A collection of arguments for invoking getIAMOrgPolicy.
 */
export interface GetIAMOrgPolicyArgs {
    timeouts?: inputs.GetIAMOrgPolicyTimeouts;
}

/**
 * A collection of values returned by getIAMOrgPolicy.
 */
export interface GetIAMOrgPolicyResult {
    /**
     * Default service strategy (`allow` or `deny`).
     */
    readonly defaultServiceStrategy: string;
    /**
     * The ID of this resource.
     */
    readonly id: string;
    /**
     * IAM policy services.
     */
    readonly services: {[key: string]: outputs.GetIAMOrgPolicyServices};
    readonly timeouts?: outputs.GetIAMOrgPolicyTimeouts;
}
/**
 * Fetch Exoscale [IAM](https://community.exoscale.com/documentation/iam/) Organization Policy.
 *
 * Corresponding resource: exoscale_iam_org_policy.
 */
export function getIAMOrgPolicyOutput(args?: GetIAMOrgPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIAMOrgPolicyResult> {
    return pulumi.output(args).apply((a: any) => getIAMOrgPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getIAMOrgPolicy.
 */
export interface GetIAMOrgPolicyOutputArgs {
    timeouts?: pulumi.Input<inputs.GetIAMOrgPolicyTimeoutsArgs>;
}
