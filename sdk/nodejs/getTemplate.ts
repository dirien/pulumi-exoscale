// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getTemplate(args: GetTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetTemplateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("exoscale:index/getTemplate:getTemplate", {
        "id": args.id,
        "name": args.name,
        "visibility": args.visibility,
        "zone": args.zone,
    }, opts);
}

/**
 * A collection of arguments for invoking getTemplate.
 */
export interface GetTemplateArgs {
    /**
     * The compute instance template ID to match (conflicts with `name`).
     */
    id?: string;
    /**
     * The template name to match (conflicts with `id`) (when multiple templates have the same name, the newest one will be returned).
     */
    name?: string;
    /**
     * A template category filter (default: `public`); among:
     */
    visibility?: string;
    /**
     * The Exoscale [Zone][zone] name.
     */
    zone: string;
}

/**
 * A collection of values returned by getTemplate.
 */
export interface GetTemplateResult {
    /**
     * Username to use to log into a compute instance based on this template
     */
    readonly defaultUser: string;
    readonly id?: string;
    readonly name?: string;
    readonly visibility?: string;
    readonly zone: string;
}
export function getTemplateOutput(args: GetTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTemplateResult> {
    return pulumi.output(args).apply((a: any) => getTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getTemplate.
 */
export interface GetTemplateOutputArgs {
    /**
     * The compute instance template ID to match (conflicts with `name`).
     */
    id?: pulumi.Input<string>;
    /**
     * The template name to match (conflicts with `id`) (when multiple templates have the same name, the newest one will be returned).
     */
    name?: pulumi.Input<string>;
    /**
     * A template category filter (default: `public`); among:
     */
    visibility?: pulumi.Input<string>;
    /**
     * The Exoscale [Zone][zone] name.
     */
    zone: pulumi.Input<string>;
}
