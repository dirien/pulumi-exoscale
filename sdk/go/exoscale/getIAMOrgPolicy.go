// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package exoscale

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/pulumiverse/pulumi-exoscale/sdk/go/exoscale/internal"
)

// Fetch Exoscale [IAM](https://community.exoscale.com/documentation/iam/) Organization Policy.
//
// Corresponding resource: exoscale_iam_org_policy.
func LookupIAMOrgPolicy(ctx *pulumi.Context, args *LookupIAMOrgPolicyArgs, opts ...pulumi.InvokeOption) (*LookupIAMOrgPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIAMOrgPolicyResult
	err := ctx.Invoke("exoscale:index/getIAMOrgPolicy:getIAMOrgPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIAMOrgPolicy.
type LookupIAMOrgPolicyArgs struct {
	Timeouts *GetIAMOrgPolicyTimeouts `pulumi:"timeouts"`
}

// A collection of values returned by getIAMOrgPolicy.
type LookupIAMOrgPolicyResult struct {
	// Default service strategy (`allow` or `deny`).
	DefaultServiceStrategy string `pulumi:"defaultServiceStrategy"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// IAM policy services.
	Services map[string]GetIAMOrgPolicyServices `pulumi:"services"`
	Timeouts *GetIAMOrgPolicyTimeouts           `pulumi:"timeouts"`
}

func LookupIAMOrgPolicyOutput(ctx *pulumi.Context, args LookupIAMOrgPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupIAMOrgPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIAMOrgPolicyResult, error) {
			args := v.(LookupIAMOrgPolicyArgs)
			r, err := LookupIAMOrgPolicy(ctx, &args, opts...)
			var s LookupIAMOrgPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIAMOrgPolicyResultOutput)
}

// A collection of arguments for invoking getIAMOrgPolicy.
type LookupIAMOrgPolicyOutputArgs struct {
	Timeouts GetIAMOrgPolicyTimeoutsPtrInput `pulumi:"timeouts"`
}

func (LookupIAMOrgPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIAMOrgPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getIAMOrgPolicy.
type LookupIAMOrgPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupIAMOrgPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIAMOrgPolicyResult)(nil)).Elem()
}

func (o LookupIAMOrgPolicyResultOutput) ToLookupIAMOrgPolicyResultOutput() LookupIAMOrgPolicyResultOutput {
	return o
}

func (o LookupIAMOrgPolicyResultOutput) ToLookupIAMOrgPolicyResultOutputWithContext(ctx context.Context) LookupIAMOrgPolicyResultOutput {
	return o
}

func (o LookupIAMOrgPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupIAMOrgPolicyResult] {
	return pulumix.Output[LookupIAMOrgPolicyResult]{
		OutputState: o.OutputState,
	}
}

// Default service strategy (`allow` or `deny`).
func (o LookupIAMOrgPolicyResultOutput) DefaultServiceStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIAMOrgPolicyResult) string { return v.DefaultServiceStrategy }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o LookupIAMOrgPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIAMOrgPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// IAM policy services.
func (o LookupIAMOrgPolicyResultOutput) Services() GetIAMOrgPolicyServicesMapOutput {
	return o.ApplyT(func(v LookupIAMOrgPolicyResult) map[string]GetIAMOrgPolicyServices { return v.Services }).(GetIAMOrgPolicyServicesMapOutput)
}

func (o LookupIAMOrgPolicyResultOutput) Timeouts() GetIAMOrgPolicyTimeoutsPtrOutput {
	return o.ApplyT(func(v LookupIAMOrgPolicyResult) *GetIAMOrgPolicyTimeouts { return v.Timeouts }).(GetIAMOrgPolicyTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIAMOrgPolicyResultOutput{})
}
