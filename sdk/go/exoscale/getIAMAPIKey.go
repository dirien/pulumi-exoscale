// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package exoscale

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/pulumiverse/pulumi-exoscale/sdk/go/exoscale/internal"
)

// Fetch Exoscale [IAM](https://community.exoscale.com/documentation/iam/) API Key.
//
// Corresponding resource: exoscale_iam_role.
func LookupIAMAPIKey(ctx *pulumi.Context, args *LookupIAMAPIKeyArgs, opts ...pulumi.InvokeOption) (*LookupIAMAPIKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIAMAPIKeyResult
	err := ctx.Invoke("exoscale:index/getIAMAPIKey:getIAMAPIKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIAMAPIKey.
type LookupIAMAPIKeyArgs struct {
	// The IAM API Key to match.
	Key      string                `pulumi:"key"`
	Timeouts *GetIAMAPIKeyTimeouts `pulumi:"timeouts"`
}

// A collection of values returned by getIAMAPIKey.
type LookupIAMAPIKeyResult struct {
	// The ID of this resource.
	Id string `pulumi:"id"`
	// The IAM API Key to match.
	Key string `pulumi:"key"`
	// IAM API Key name.
	Name string `pulumi:"name"`
	// IAM API Key role ID.
	RoleId   string                `pulumi:"roleId"`
	Timeouts *GetIAMAPIKeyTimeouts `pulumi:"timeouts"`
}

func LookupIAMAPIKeyOutput(ctx *pulumi.Context, args LookupIAMAPIKeyOutputArgs, opts ...pulumi.InvokeOption) LookupIAMAPIKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIAMAPIKeyResult, error) {
			args := v.(LookupIAMAPIKeyArgs)
			r, err := LookupIAMAPIKey(ctx, &args, opts...)
			var s LookupIAMAPIKeyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIAMAPIKeyResultOutput)
}

// A collection of arguments for invoking getIAMAPIKey.
type LookupIAMAPIKeyOutputArgs struct {
	// The IAM API Key to match.
	Key      pulumi.StringInput           `pulumi:"key"`
	Timeouts GetIAMAPIKeyTimeoutsPtrInput `pulumi:"timeouts"`
}

func (LookupIAMAPIKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIAMAPIKeyArgs)(nil)).Elem()
}

// A collection of values returned by getIAMAPIKey.
type LookupIAMAPIKeyResultOutput struct{ *pulumi.OutputState }

func (LookupIAMAPIKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIAMAPIKeyResult)(nil)).Elem()
}

func (o LookupIAMAPIKeyResultOutput) ToLookupIAMAPIKeyResultOutput() LookupIAMAPIKeyResultOutput {
	return o
}

func (o LookupIAMAPIKeyResultOutput) ToLookupIAMAPIKeyResultOutputWithContext(ctx context.Context) LookupIAMAPIKeyResultOutput {
	return o
}

func (o LookupIAMAPIKeyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupIAMAPIKeyResult] {
	return pulumix.Output[LookupIAMAPIKeyResult]{
		OutputState: o.OutputState,
	}
}

// The ID of this resource.
func (o LookupIAMAPIKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIAMAPIKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

// The IAM API Key to match.
func (o LookupIAMAPIKeyResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIAMAPIKeyResult) string { return v.Key }).(pulumi.StringOutput)
}

// IAM API Key name.
func (o LookupIAMAPIKeyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIAMAPIKeyResult) string { return v.Name }).(pulumi.StringOutput)
}

// IAM API Key role ID.
func (o LookupIAMAPIKeyResultOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIAMAPIKeyResult) string { return v.RoleId }).(pulumi.StringOutput)
}

func (o LookupIAMAPIKeyResultOutput) Timeouts() GetIAMAPIKeyTimeoutsPtrOutput {
	return o.ApplyT(func(v LookupIAMAPIKeyResult) *GetIAMAPIKeyTimeouts { return v.Timeouts }).(GetIAMAPIKeyTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIAMAPIKeyResultOutput{})
}
