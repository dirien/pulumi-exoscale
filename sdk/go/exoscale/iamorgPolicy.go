// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package exoscale

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-exoscale/sdk/go/exoscale/internal"
)

type IAMOrgPolicy struct {
	pulumi.CustomResourceState

	// Default service strategy (`allow` or `deny`).
	DefaultServiceStrategy pulumi.StringOutput `pulumi:"defaultServiceStrategy"`
	// IAM policy services.
	Services IAMOrgPolicyServicesMapOutput `pulumi:"services"`
	Timeouts IAMOrgPolicyTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewIAMOrgPolicy registers a new resource with the given unique name, arguments, and options.
func NewIAMOrgPolicy(ctx *pulumi.Context,
	name string, args *IAMOrgPolicyArgs, opts ...pulumi.ResourceOption) (*IAMOrgPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefaultServiceStrategy == nil {
		return nil, errors.New("invalid value for required argument 'DefaultServiceStrategy'")
	}
	if args.Services == nil {
		return nil, errors.New("invalid value for required argument 'Services'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IAMOrgPolicy
	err := ctx.RegisterResource("exoscale:index/iAMOrgPolicy:IAMOrgPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIAMOrgPolicy gets an existing IAMOrgPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIAMOrgPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IAMOrgPolicyState, opts ...pulumi.ResourceOption) (*IAMOrgPolicy, error) {
	var resource IAMOrgPolicy
	err := ctx.ReadResource("exoscale:index/iAMOrgPolicy:IAMOrgPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IAMOrgPolicy resources.
type iamorgPolicyState struct {
	// Default service strategy (`allow` or `deny`).
	DefaultServiceStrategy *string `pulumi:"defaultServiceStrategy"`
	// IAM policy services.
	Services map[string]IAMOrgPolicyServices `pulumi:"services"`
	Timeouts *IAMOrgPolicyTimeouts           `pulumi:"timeouts"`
}

type IAMOrgPolicyState struct {
	// Default service strategy (`allow` or `deny`).
	DefaultServiceStrategy pulumi.StringPtrInput
	// IAM policy services.
	Services IAMOrgPolicyServicesMapInput
	Timeouts IAMOrgPolicyTimeoutsPtrInput
}

func (IAMOrgPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*iamorgPolicyState)(nil)).Elem()
}

type iamorgPolicyArgs struct {
	// Default service strategy (`allow` or `deny`).
	DefaultServiceStrategy string `pulumi:"defaultServiceStrategy"`
	// IAM policy services.
	Services map[string]IAMOrgPolicyServices `pulumi:"services"`
	Timeouts *IAMOrgPolicyTimeouts           `pulumi:"timeouts"`
}

// The set of arguments for constructing a IAMOrgPolicy resource.
type IAMOrgPolicyArgs struct {
	// Default service strategy (`allow` or `deny`).
	DefaultServiceStrategy pulumi.StringInput
	// IAM policy services.
	Services IAMOrgPolicyServicesMapInput
	Timeouts IAMOrgPolicyTimeoutsPtrInput
}

func (IAMOrgPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iamorgPolicyArgs)(nil)).Elem()
}

type IAMOrgPolicyInput interface {
	pulumi.Input

	ToIAMOrgPolicyOutput() IAMOrgPolicyOutput
	ToIAMOrgPolicyOutputWithContext(ctx context.Context) IAMOrgPolicyOutput
}

func (*IAMOrgPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMOrgPolicy)(nil)).Elem()
}

func (i *IAMOrgPolicy) ToIAMOrgPolicyOutput() IAMOrgPolicyOutput {
	return i.ToIAMOrgPolicyOutputWithContext(context.Background())
}

func (i *IAMOrgPolicy) ToIAMOrgPolicyOutputWithContext(ctx context.Context) IAMOrgPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMOrgPolicyOutput)
}

// IAMOrgPolicyArrayInput is an input type that accepts IAMOrgPolicyArray and IAMOrgPolicyArrayOutput values.
// You can construct a concrete instance of `IAMOrgPolicyArrayInput` via:
//
//	IAMOrgPolicyArray{ IAMOrgPolicyArgs{...} }
type IAMOrgPolicyArrayInput interface {
	pulumi.Input

	ToIAMOrgPolicyArrayOutput() IAMOrgPolicyArrayOutput
	ToIAMOrgPolicyArrayOutputWithContext(context.Context) IAMOrgPolicyArrayOutput
}

type IAMOrgPolicyArray []IAMOrgPolicyInput

func (IAMOrgPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IAMOrgPolicy)(nil)).Elem()
}

func (i IAMOrgPolicyArray) ToIAMOrgPolicyArrayOutput() IAMOrgPolicyArrayOutput {
	return i.ToIAMOrgPolicyArrayOutputWithContext(context.Background())
}

func (i IAMOrgPolicyArray) ToIAMOrgPolicyArrayOutputWithContext(ctx context.Context) IAMOrgPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMOrgPolicyArrayOutput)
}

// IAMOrgPolicyMapInput is an input type that accepts IAMOrgPolicyMap and IAMOrgPolicyMapOutput values.
// You can construct a concrete instance of `IAMOrgPolicyMapInput` via:
//
//	IAMOrgPolicyMap{ "key": IAMOrgPolicyArgs{...} }
type IAMOrgPolicyMapInput interface {
	pulumi.Input

	ToIAMOrgPolicyMapOutput() IAMOrgPolicyMapOutput
	ToIAMOrgPolicyMapOutputWithContext(context.Context) IAMOrgPolicyMapOutput
}

type IAMOrgPolicyMap map[string]IAMOrgPolicyInput

func (IAMOrgPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IAMOrgPolicy)(nil)).Elem()
}

func (i IAMOrgPolicyMap) ToIAMOrgPolicyMapOutput() IAMOrgPolicyMapOutput {
	return i.ToIAMOrgPolicyMapOutputWithContext(context.Background())
}

func (i IAMOrgPolicyMap) ToIAMOrgPolicyMapOutputWithContext(ctx context.Context) IAMOrgPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMOrgPolicyMapOutput)
}

type IAMOrgPolicyOutput struct{ *pulumi.OutputState }

func (IAMOrgPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMOrgPolicy)(nil)).Elem()
}

func (o IAMOrgPolicyOutput) ToIAMOrgPolicyOutput() IAMOrgPolicyOutput {
	return o
}

func (o IAMOrgPolicyOutput) ToIAMOrgPolicyOutputWithContext(ctx context.Context) IAMOrgPolicyOutput {
	return o
}

// Default service strategy (`allow` or `deny`).
func (o IAMOrgPolicyOutput) DefaultServiceStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v *IAMOrgPolicy) pulumi.StringOutput { return v.DefaultServiceStrategy }).(pulumi.StringOutput)
}

// IAM policy services.
func (o IAMOrgPolicyOutput) Services() IAMOrgPolicyServicesMapOutput {
	return o.ApplyT(func(v *IAMOrgPolicy) IAMOrgPolicyServicesMapOutput { return v.Services }).(IAMOrgPolicyServicesMapOutput)
}

func (o IAMOrgPolicyOutput) Timeouts() IAMOrgPolicyTimeoutsPtrOutput {
	return o.ApplyT(func(v *IAMOrgPolicy) IAMOrgPolicyTimeoutsPtrOutput { return v.Timeouts }).(IAMOrgPolicyTimeoutsPtrOutput)
}

type IAMOrgPolicyArrayOutput struct{ *pulumi.OutputState }

func (IAMOrgPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IAMOrgPolicy)(nil)).Elem()
}

func (o IAMOrgPolicyArrayOutput) ToIAMOrgPolicyArrayOutput() IAMOrgPolicyArrayOutput {
	return o
}

func (o IAMOrgPolicyArrayOutput) ToIAMOrgPolicyArrayOutputWithContext(ctx context.Context) IAMOrgPolicyArrayOutput {
	return o
}

func (o IAMOrgPolicyArrayOutput) Index(i pulumi.IntInput) IAMOrgPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IAMOrgPolicy {
		return vs[0].([]*IAMOrgPolicy)[vs[1].(int)]
	}).(IAMOrgPolicyOutput)
}

type IAMOrgPolicyMapOutput struct{ *pulumi.OutputState }

func (IAMOrgPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IAMOrgPolicy)(nil)).Elem()
}

func (o IAMOrgPolicyMapOutput) ToIAMOrgPolicyMapOutput() IAMOrgPolicyMapOutput {
	return o
}

func (o IAMOrgPolicyMapOutput) ToIAMOrgPolicyMapOutputWithContext(ctx context.Context) IAMOrgPolicyMapOutput {
	return o
}

func (o IAMOrgPolicyMapOutput) MapIndex(k pulumi.StringInput) IAMOrgPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IAMOrgPolicy {
		return vs[0].(map[string]*IAMOrgPolicy)[vs[1].(string)]
	}).(IAMOrgPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IAMOrgPolicyInput)(nil)).Elem(), &IAMOrgPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*IAMOrgPolicyArrayInput)(nil)).Elem(), IAMOrgPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IAMOrgPolicyMapInput)(nil)).Elem(), IAMOrgPolicyMap{})
	pulumi.RegisterOutputType(IAMOrgPolicyOutput{})
	pulumi.RegisterOutputType(IAMOrgPolicyArrayOutput{})
	pulumi.RegisterOutputType(IAMOrgPolicyMapOutput{})
}
