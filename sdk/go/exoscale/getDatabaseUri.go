// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package exoscale

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-exoscale/sdk/go/exoscale/internal"
)

// ## Example Usage
func GetDatabaseUri(ctx *pulumi.Context, args *GetDatabaseUriArgs, opts ...pulumi.InvokeOption) (*GetDatabaseUriResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDatabaseUriResult
	err := ctx.Invoke("exoscale:index/getDatabaseUri:getDatabaseUri", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatabaseUri.
type GetDatabaseUriArgs struct {
	// The database name to match.
	Name     string                  `pulumi:"name"`
	Timeouts *GetDatabaseUriTimeouts `pulumi:"timeouts"`
	// The type of the database service (`kafka`, `mysql`, `opensearch`, `pg`, `redis`).
	Type string `pulumi:"type"`
	// The Exoscale Zone name.
	Zone string `pulumi:"zone"`
}

// A collection of values returned by getDatabaseUri.
type GetDatabaseUriResult struct {
	// The ID of this resource.
	Id string `pulumi:"id"`
	// The database name to match.
	Name     string                  `pulumi:"name"`
	Timeouts *GetDatabaseUriTimeouts `pulumi:"timeouts"`
	// The type of the database service (`kafka`, `mysql`, `opensearch`, `pg`, `redis`).
	Type string `pulumi:"type"`
	// The database service connection URI.
	Uri string `pulumi:"uri"`
	// The Exoscale Zone name.
	Zone string `pulumi:"zone"`
}

func GetDatabaseUriOutput(ctx *pulumi.Context, args GetDatabaseUriOutputArgs, opts ...pulumi.InvokeOption) GetDatabaseUriResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDatabaseUriResult, error) {
			args := v.(GetDatabaseUriArgs)
			r, err := GetDatabaseUri(ctx, &args, opts...)
			var s GetDatabaseUriResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDatabaseUriResultOutput)
}

// A collection of arguments for invoking getDatabaseUri.
type GetDatabaseUriOutputArgs struct {
	// The database name to match.
	Name     pulumi.StringInput             `pulumi:"name"`
	Timeouts GetDatabaseUriTimeoutsPtrInput `pulumi:"timeouts"`
	// The type of the database service (`kafka`, `mysql`, `opensearch`, `pg`, `redis`).
	Type pulumi.StringInput `pulumi:"type"`
	// The Exoscale Zone name.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetDatabaseUriOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUriArgs)(nil)).Elem()
}

// A collection of values returned by getDatabaseUri.
type GetDatabaseUriResultOutput struct{ *pulumi.OutputState }

func (GetDatabaseUriResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUriResult)(nil)).Elem()
}

func (o GetDatabaseUriResultOutput) ToGetDatabaseUriResultOutput() GetDatabaseUriResultOutput {
	return o
}

func (o GetDatabaseUriResultOutput) ToGetDatabaseUriResultOutputWithContext(ctx context.Context) GetDatabaseUriResultOutput {
	return o
}

// The ID of this resource.
func (o GetDatabaseUriResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUriResult) string { return v.Id }).(pulumi.StringOutput)
}

// The database name to match.
func (o GetDatabaseUriResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUriResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDatabaseUriResultOutput) Timeouts() GetDatabaseUriTimeoutsPtrOutput {
	return o.ApplyT(func(v GetDatabaseUriResult) *GetDatabaseUriTimeouts { return v.Timeouts }).(GetDatabaseUriTimeoutsPtrOutput)
}

// The type of the database service (`kafka`, `mysql`, `opensearch`, `pg`, `redis`).
func (o GetDatabaseUriResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUriResult) string { return v.Type }).(pulumi.StringOutput)
}

// The database service connection URI.
func (o GetDatabaseUriResultOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUriResult) string { return v.Uri }).(pulumi.StringOutput)
}

// The Exoscale Zone name.
func (o GetDatabaseUriResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUriResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDatabaseUriResultOutput{})
}
