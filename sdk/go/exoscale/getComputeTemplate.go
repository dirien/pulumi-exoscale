// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package exoscale

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-exoscale/sdk/go/exoscale/internal"
)

func GetComputeTemplate(ctx *pulumi.Context, args *GetComputeTemplateArgs, opts ...pulumi.InvokeOption) (*GetComputeTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetComputeTemplateResult
	err := ctx.Invoke("exoscale:index/getComputeTemplate:getComputeTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getComputeTemplate.
type GetComputeTemplateArgs struct {
	// A template category filter (default: `featured`); among: - `featured` - official Exoscale templates - `community` - community-contributed templates - `mine` - custom templates private to my organization
	Filter *string `pulumi:"filter"`
	// The compute instance template ID to match (conflicts with `name`).
	Id *string `pulumi:"id"`
	// The template name to match (conflicts with `id`).
	Name *string `pulumi:"name"`
	// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
	Zone string `pulumi:"zone"`
}

// A collection of values returned by getComputeTemplate.
type GetComputeTemplateResult struct {
	// A template category filter (default: `featured`); among: - `featured` - official Exoscale templates - `community` - community-contributed templates - `mine` - custom templates private to my organization
	Filter *string `pulumi:"filter"`
	// The compute instance template ID to match (conflicts with `name`).
	Id *string `pulumi:"id"`
	// The template name to match (conflicts with `id`).
	Name *string `pulumi:"name"`
	// Username for logging into a compute instance based on this template
	Username string `pulumi:"username"`
	// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
	Zone string `pulumi:"zone"`
}

func GetComputeTemplateOutput(ctx *pulumi.Context, args GetComputeTemplateOutputArgs, opts ...pulumi.InvokeOption) GetComputeTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetComputeTemplateResult, error) {
			args := v.(GetComputeTemplateArgs)
			r, err := GetComputeTemplate(ctx, &args, opts...)
			var s GetComputeTemplateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetComputeTemplateResultOutput)
}

// A collection of arguments for invoking getComputeTemplate.
type GetComputeTemplateOutputArgs struct {
	// A template category filter (default: `featured`); among: - `featured` - official Exoscale templates - `community` - community-contributed templates - `mine` - custom templates private to my organization
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// The compute instance template ID to match (conflicts with `name`).
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The template name to match (conflicts with `id`).
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetComputeTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getComputeTemplate.
type GetComputeTemplateResultOutput struct{ *pulumi.OutputState }

func (GetComputeTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeTemplateResult)(nil)).Elem()
}

func (o GetComputeTemplateResultOutput) ToGetComputeTemplateResultOutput() GetComputeTemplateResultOutput {
	return o
}

func (o GetComputeTemplateResultOutput) ToGetComputeTemplateResultOutputWithContext(ctx context.Context) GetComputeTemplateResultOutput {
	return o
}

// A template category filter (default: `featured`); among: - `featured` - official Exoscale templates - `community` - community-contributed templates - `mine` - custom templates private to my organization
func (o GetComputeTemplateResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputeTemplateResult) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// The compute instance template ID to match (conflicts with `name`).
func (o GetComputeTemplateResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputeTemplateResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The template name to match (conflicts with `id`).
func (o GetComputeTemplateResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputeTemplateResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Username for logging into a compute instance based on this template
func (o GetComputeTemplateResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeTemplateResult) string { return v.Username }).(pulumi.StringOutput)
}

// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
func (o GetComputeTemplateResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeTemplateResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetComputeTemplateResultOutput{})
}
