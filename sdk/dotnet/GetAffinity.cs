// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Exoscale
{
    public static class GetAffinity
    {
        /// <summary>
        /// !&gt; **WARNING:** This data source is DEPRECATED and will be removed in the next major version. Please use exoscale.AntiAffinityGroup instead.
        /// </summary>
        public static Task<GetAffinityResult> InvokeAsync(GetAffinityArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAffinityResult>("exoscale:index/getAffinity:getAffinity", args ?? new GetAffinityArgs(), options.WithDefaults());

        /// <summary>
        /// !&gt; **WARNING:** This data source is DEPRECATED and will be removed in the next major version. Please use exoscale.AntiAffinityGroup instead.
        /// </summary>
        public static Output<GetAffinityResult> Invoke(GetAffinityInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAffinityResult>("exoscale:index/getAffinity:getAffinity", args ?? new GetAffinityInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAffinityArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The anti-affinity group ID to match (conflicts with `name`)
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The group name to match (conflicts with `id`)
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetAffinityArgs()
        {
        }
        public static new GetAffinityArgs Empty => new GetAffinityArgs();
    }

    public sealed class GetAffinityInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The anti-affinity group ID to match (conflicts with `name`)
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The group name to match (conflicts with `id`)
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetAffinityInvokeArgs()
        {
        }
        public static new GetAffinityInvokeArgs Empty => new GetAffinityInvokeArgs();
    }


    [OutputType]
    public sealed class GetAffinityResult
    {
        public readonly string? Id;
        public readonly string? Name;

        [OutputConstructor]
        private GetAffinityResult(
            string? id,

            string? name)
        {
            Id = id;
            Name = name;
        }
    }
}
