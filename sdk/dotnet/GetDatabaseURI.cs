// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Exoscale
{
    public static class GetDatabaseURI
    {
        public static Task<GetDatabaseURIResult> InvokeAsync(GetDatabaseURIArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseURIResult>("exoscale:index/getDatabaseURI:getDatabaseURI", args ?? new GetDatabaseURIArgs(), options.WithDefaults());

        public static Output<GetDatabaseURIResult> Invoke(GetDatabaseURIInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseURIResult>("exoscale:index/getDatabaseURI:getDatabaseURI", args ?? new GetDatabaseURIInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatabaseURIArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The database name to match.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("timeouts")]
        public Inputs.GetDatabaseURITimeoutsArgs? Timeouts { get; set; }

        /// <summary>
        /// The type of the database service (`kafka`, `mysql`, `opensearch`, `pg`, `redis`).
        /// </summary>
        [Input("type", required: true)]
        public string Type { get; set; } = null!;

        /// <summary>
        /// The Exoscale Zone name.
        /// </summary>
        [Input("zone", required: true)]
        public string Zone { get; set; } = null!;

        public GetDatabaseURIArgs()
        {
        }
        public static new GetDatabaseURIArgs Empty => new GetDatabaseURIArgs();
    }

    public sealed class GetDatabaseURIInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The database name to match.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("timeouts")]
        public Input<Inputs.GetDatabaseURITimeoutsInputArgs>? Timeouts { get; set; }

        /// <summary>
        /// The type of the database service (`kafka`, `mysql`, `opensearch`, `pg`, `redis`).
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// The Exoscale Zone name.
        /// </summary>
        [Input("zone", required: true)]
        public Input<string> Zone { get; set; } = null!;

        public GetDatabaseURIInvokeArgs()
        {
        }
        public static new GetDatabaseURIInvokeArgs Empty => new GetDatabaseURIInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatabaseURIResult
    {
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The database name to match.
        /// </summary>
        public readonly string Name;
        public readonly Outputs.GetDatabaseURITimeoutsResult? Timeouts;
        /// <summary>
        /// The type of the database service (`kafka`, `mysql`, `opensearch`, `pg`, `redis`).
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The database service connection URI.
        /// </summary>
        public readonly string Uri;
        /// <summary>
        /// The Exoscale Zone name.
        /// </summary>
        public readonly string Zone;

        [OutputConstructor]
        private GetDatabaseURIResult(
            string id,

            string name,

            Outputs.GetDatabaseURITimeoutsResult? timeouts,

            string type,

            string uri,

            string zone)
        {
            Id = id;
            Name = name;
            Timeouts = timeouts;
            Type = type;
            Uri = uri;
            Zone = zone;
        }
    }
}
