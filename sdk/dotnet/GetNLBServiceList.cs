// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Exoscale
{
    public static class GetNLBServiceList
    {
        public static Task<GetNLBServiceListResult> InvokeAsync(GetNLBServiceListArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNLBServiceListResult>("exoscale:index/getNLBServiceList:getNLBServiceList", args ?? new GetNLBServiceListArgs(), options.WithDefaults());

        public static Output<GetNLBServiceListResult> Invoke(GetNLBServiceListInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNLBServiceListResult>("exoscale:index/getNLBServiceList:getNLBServiceList", args ?? new GetNLBServiceListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNLBServiceListArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The NLB ID to match (conflicts with `name`).
        /// </summary>
        [Input("nlbId")]
        public string? NlbId { get; set; }

        /// <summary>
        /// The NLB name to match (conflicts with `id`).
        /// </summary>
        [Input("nlbName")]
        public string? NlbName { get; set; }

        [Input("timeouts")]
        public Inputs.GetNLBServiceListTimeoutsArgs? Timeouts { get; set; }

        /// <summary>
        /// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
        /// </summary>
        [Input("zone", required: true)]
        public string Zone { get; set; } = null!;

        public GetNLBServiceListArgs()
        {
        }
        public static new GetNLBServiceListArgs Empty => new GetNLBServiceListArgs();
    }

    public sealed class GetNLBServiceListInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The NLB ID to match (conflicts with `name`).
        /// </summary>
        [Input("nlbId")]
        public Input<string>? NlbId { get; set; }

        /// <summary>
        /// The NLB name to match (conflicts with `id`).
        /// </summary>
        [Input("nlbName")]
        public Input<string>? NlbName { get; set; }

        [Input("timeouts")]
        public Input<Inputs.GetNLBServiceListTimeoutsInputArgs>? Timeouts { get; set; }

        /// <summary>
        /// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
        /// </summary>
        [Input("zone", required: true)]
        public Input<string> Zone { get; set; } = null!;

        public GetNLBServiceListInvokeArgs()
        {
        }
        public static new GetNLBServiceListInvokeArgs Empty => new GetNLBServiceListInvokeArgs();
    }


    [OutputType]
    public sealed class GetNLBServiceListResult
    {
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The NLB ID to match (conflicts with `name`).
        /// </summary>
        public readonly string? NlbId;
        /// <summary>
        /// The NLB name to match (conflicts with `id`).
        /// </summary>
        public readonly string? NlbName;
        /// <summary>
        /// The list of exoscale*nlb*service.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNLBServiceListServiceResult> Services;
        public readonly Outputs.GetNLBServiceListTimeoutsResult? Timeouts;
        /// <summary>
        /// The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.
        /// </summary>
        public readonly string Zone;

        [OutputConstructor]
        private GetNLBServiceListResult(
            string id,

            string? nlbId,

            string? nlbName,

            ImmutableArray<Outputs.GetNLBServiceListServiceResult> services,

            Outputs.GetNLBServiceListTimeoutsResult? timeouts,

            string zone)
        {
            Id = id;
            NlbId = nlbId;
            NlbName = nlbName;
            Services = services;
            Timeouts = timeouts;
            Zone = zone;
        }
    }
}
